{"version":3,"sources":["webpack:///static/js/app.3f6ba7e1d9140ef70233.js","webpack:///webpack/bootstrap e6f3f95c1e40a1fb683e","webpack:///./src/main.js","webpack:///./src/components/utils/coerceBoolean.js","webpack:///./src/route-config.js","webpack:///./src/services/messages.js","webpack:///App.vue","webpack:///about.vue","webpack:///index.vue","webpack:///message.vue","webpack:///button.vue","webpack:///header.vue","webpack:///loading.vue","webpack:///./~/es6-promise/dist/es6-promise.js","webpack:///./~/hammerjs/hammer.js","webpack:///./~/process/browser.js","webpack:///./src/App.vue?d818","webpack:///./src/components/about/about.vue?2d0f","webpack:///./src/components/index/archive.vue?1a3f","webpack:///./src/components/index/index.vue?b532","webpack:///./src/components/index/message.vue?4f53","webpack:///./src/components/not-found.vue?0f82","webpack:///./src/components/publick/button.vue?0483","webpack:///./src/components/publick/header.vue?cade","webpack:///./src/components/publick/loading.vue?e4c4","webpack:///./src/components/user/index.vue?f6ef","webpack:///./src/components/user/posts.vue?5fc3","webpack:///./src/components/user/profile.vue?dd67","webpack:///./src/components/user/settings.vue?d2d5","webpack:///./src/components/about/about_me.vue?8791","webpack:///./src/App.vue","webpack:///./src/components/about/about.vue","webpack:///./src/components/about/about_me.vue","webpack:///./src/components/index/archive.vue","webpack:///./src/components/index/index.vue","webpack:///./src/components/index/message.vue","webpack:///./src/components/not-found.vue","webpack:///./src/components/publick/button.vue","webpack:///./src/components/publick/header.vue","webpack:///./src/components/publick/loading.vue","webpack:///./src/components/user/index.vue","webpack:///./src/components/user/posts.vue","webpack:///./src/components/user/profile.vue","webpack:///./src/components/user/settings.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vue-touch/vue-touch.js","webpack:///./~/vue/dist/vue.common.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","_vueRouter","_vueRouter2","_routeConfig","_vueTouch","_vueTouch2","use","polyfill","router","history","saveScrollPosition","configRouter","start","window","Object","defineProperty","value","val","map","/about","component","subRoutes","about_me","/user/:userId","/","template","profile/:something","posts","settings","*","/index","/message/:messageId","/archived","redirect","/info","/hello/:userId","beforeEach","transition","to","path","app","authenticating","setTimeout","abort","next","get","params","cb","text","_header","_header2","_loading","_loading2","_button","_button2","data","loadertop","loadersize","lefticonname","righticonname","apptitle","methods","handlerToAbout","this","$route","go","handlerToIndex","actionback","back","handlerLoadingtest","replace","components","headerbar","loading","buttonbar","route","message","_messages","_messages2","_ref","messageId","console","log","err","_coerceBoolean","_coerceBoolean2","props","small","type","Boolean","coerce","big","disable","iconfixedleft","iconfixedright","setstyle","String","stylea","styleb","ready","textsize","Number","textcolor","lefticon","handlerlefticon","Function","righticon","handlerrighticon","show","top","__WEBPACK_AMD_DEFINE_RESULT__","process","global","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","i","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertx","vertx","runOnLoop","runOnContext","e","lib$es6$promise$then$$then","onFulfillment","onRejection","parent","child","constructor","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$PROMISE_ID","lib$es6$promise$$internal$$makePromise","state","_state","arguments","lib$es6$promise$$internal$$invokeCallback","_result","lib$es6$promise$$internal$$subscribe","lib$es6$promise$promise$resolve$$resolve","object","Constructor","promise","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","then","error","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","lib$es6$promise$$internal$$FULFILLED","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$then$$default","resolve","lib$es6$promise$promise$resolve$$default","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","length","subscribers","settled","detail","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$$internal$$nextId","lib$es6$promise$$internal$$id","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","reject","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","lib$es6$promise$enumerator$$Enumerator","input","_instanceConstructor","_input","_remaining","Array","_enumerate","lib$es6$promise$enumerator$$validationError","Error","lib$es6$promise$polyfill$$polyfill","local","self","P","Promise","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","Math","random","substring","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$reject$$default","all","race","_setScheduler","_setAsap","_asap","catch","_eachEntry","entry","_settledAt","_willSettleAt","enumerator","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","exportName","setTimeoutContext","fn","timeout","context","bindFn","invokeArrayArg","each","iterator","forEach","hasOwnProperty","deprecate","method","name","deprecationMessage","stack","warn","apply","inherit","base","properties","childP","baseP","create","_super","assign","boolOrFn","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","parentNode","inStr","str","find","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","defaults","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","len","run","Item","fun","array","noop","title","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask","__vue_script__","__vue_template__","factory","Target","matcher","delegate","Matcher","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","l","substr","eachRoute","baseRoute","addRouteCallback","msg","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","parse","names","specificity","charAt","segments","match","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","ch","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","result","j","isDynamic","addSegment","currentState","eachChar","put","decodeQueryParamPart","part","warn$1","resolvePath","relative","append","query","pop","unshift","isPromise","getRouteConfig","$options","resolveAsyncComponent","_","exports$1","Vue","_resolveComponent","Component","mapParams","JSON","stringify","genQuery","canReuse","view","childVM","canReuseFn","from","canDeactivate","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","isPlainObject","resolvedVal","$set","isPlainOjbect","applyOverride","_Vue$util","util","defineReactive","_init","root","_parent","$router","_children","_defineMeta","_destroy","_isBeingDestroyed","$remove","strats","config","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","bind","vm","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","link","protocol","location","hostname","port","toggleClasses","el","_bind","isObject","addClass","removeClass","onPriority","priority","LINK_UPDATE","activeId","_this","childLinks","querySelectorAll","existingId","getAttribute","setAttribute","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","tagName","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","pathname","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","href","mode","formatPath","_linkActiveClass","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","silent","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","querySelector","listener","url","search","hash","replaceState","pos","pageXOffset","pageYOffset","pushState","hashMatch","HashHistory","hashbang","raw","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","_suppress","onPromiseError","nextWithBoolean","res","ok","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","enumerable","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","installed","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","generatedPath","currentParams","targetParams","encodeURI","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","getElementById","scrollX","offsetTop","install","externalVue","capitalize","guardDirections","hammerDirection","directions","vueTouch","gestures","customEvents","isFn","acceptStatement","hammer","mc","recognizerType","custom","globalOptions","localOptions","hammerOptions","descriptor","opts","registerCustomEvent","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","isNaN","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","ctx","list","OBJECT_STRING","def","writable","configurable","_debounce","func","wait","timestamp","later","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","_keymap","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","filters","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","expression","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","op","__v_trans","transitionEndEvent","_isCompiled","action","inDoc","documentElement","nodeType","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","useCapture","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","classList","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","debug","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","isExtensible","addVm","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","runBatcherQueue","devtools","watcher","pushWatcher","q","user","Watcher","expOrFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","floor","getTrackByKey","trackByKey","getValue","multi","selected","_value","indexOf$1","keyFilter","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","normalize","propCache","camel","upper","testEl","prefixes","kebab","camelPrefixes","normalize$1","_key","k","callActivateHooks","called","total","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","watch","_initDOMHooks","Directive","_locked","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","miscMixin","_applyFilters","oldValue","write","read","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","mixin","definition","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","setImmediate","counter","textNode","Set","shift","newer","older","returnEntry","defineProperties","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","toggle","display","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","iframeBind","contentWindow","capture","prevent","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","prevKeys","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","activateHooks","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","toFixed","_int","_float","sign","pluralize","delay","webpackPolyfill","paths"],"mappings":"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","file":"static/js/app.3f6ba7e1d9140ef70233.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(49);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(33);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _vueRouter = __webpack_require__(47);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _routeConfig = __webpack_require__(2);\n\t\n\tvar _vueTouch = __webpack_require__(48);\n\t\n\tvar _vueTouch2 = _interopRequireDefault(_vueTouch);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueTouch2.default);\n\t__webpack_require__(11).polyfill();\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar router = new _vueRouter2.default({\n\t  history: true,\n\t  saveScrollPosition: true\n\t});\n\t\n\t(0, _routeConfig.configRouter)(router);\n\t\n\trouter.start(_App2.default, 'body');\n\t\n\twindow.router = router;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (val) {\n\t  return typeof val !== 'string' ? val : val === 'true' ? true : val === 'false' ? false : val === 'null' ? false : val === 'undefined' ? false : val;\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.configRouter = configRouter;\n\tfunction configRouter(router) {\n\t  router.map({\n\t    '/about': {\n\t      component: __webpack_require__(34),\n\t      subRoutes: {\n\t        'about_me': {\n\t          component: __webpack_require__(35),\n\t          about_me: true\n\t        }\n\t      }\n\t    },\n\t\n\t    '/user/:userId': {\n\t      component: __webpack_require__(43),\n\t      subRoutes: {\n\t        '/': {\n\t          component: {\n\t            template: '<p>特特</p>'\n\t          }\n\t        },\n\t\n\t        'profile/:something': {\n\t          component: __webpack_require__(45)\n\t        },\n\t\n\t        'posts': {\n\t          component: __webpack_require__(44)\n\t        },\n\t\n\t        'settings': {\n\t          component: __webpack_require__(46)\n\t        }\n\t      }\n\t    },\n\t\n\t    '*': {\n\t      component: __webpack_require__(39)\n\t    },\n\t\n\t    '/index': {\n\t      component: __webpack_require__(37),\n\t      subRoutes: {\n\t        '/message/:messageId': {\n\t          component: __webpack_require__(38)\n\t        },\n\t        '/archived': {\n\t          component: __webpack_require__(36)\n\t        },\n\t\n\t        '/': {\n\t          component: {\n\t            template: 'default yo'\n\t          }\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  router.redirect({\n\t    '/info': '/about',\n\t    '/hello/:userId': '/user/:userId'\n\t  });\n\t\n\t  router.beforeEach(function (transition) {\n\t    if (transition.to.path === '/forbidden') {\n\t      router.app.authenticating = true;\n\t      setTimeout(function () {\n\t        router.app.authenticating = false;\n\t        transition.abort();\n\t      }, 3000);\n\t    } else {\n\t      transition.next();\n\t    }\n\t  });\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  get: function get(params, cb) {\n\t    setTimeout(function () {\n\t      cb(null, {\n\t        id: params.id,\n\t        text: 'Hello this is a message'\n\t      });\n\t    }, 3000);\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _header = __webpack_require__(41);\n\t\n\tvar _header2 = _interopRequireDefault(_header);\n\t\n\tvar _loading = __webpack_require__(42);\n\t\n\tvar _loading2 = _interopRequireDefault(_loading);\n\t\n\tvar _button = __webpack_require__(40);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      authenticating: false,\n\t      loadertop: 3,\n\t      loadersize: 3,\n\t      lefticonname: 'icon-left-1',\n\t      righticonname: 'icon-th-list',\n\t      apptitle: '预约营养师'\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    handlerToAbout: function handlerToAbout() {\n\t      this.$route.router.go('/about');\n\t    },\n\t    handlerToIndex: function handlerToIndex() {\n\t      this.$route.router.go('/index/message/123');\n\t    },\n\t    actionback: function actionback() {\n\t      window.history.back();\n\t    },\n\t    handlerLoadingtest: function handlerLoadingtest() {\n\t      this.$route.router.go('/forbidden');\n\t    }\n\t  },\n\t  replace: false,\n\t  components: {\n\t    headerbar: _header2.default,\n\t    loading: _loading2.default,\n\t    buttonbar: _button2.default\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  route: {\n\t    data: function data(transition) {\n\t      setTimeout(function () {\n\t        transition.next({\n\t          message: '改变了message数据',\n\t          val: 'val!'\n\t        });\n\t      }, 2000);\n\t    }\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      message: '111111',\n\t      val: 'this is val!'\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  route: {},\n\t\n\t  data: function data() {\n\t    return {\n\t      message: {}\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _messages = __webpack_require__(3);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tmodule.exports = {\n\t  route: {\n\t    data: function data(_ref) {\n\t      var to = _ref.to;\n\t      var next = _ref.next;\n\t\n\t      var params = {\n\t        id: to.params.messageId\n\t      };\n\t      console.log('to', to);\n\t      console.log('next', next);\n\t\n\t      _messages2.default.get(params, function (err, message) {\n\t        if (err) {} else {\n\t            next({\n\t              message: message\n\t            });\n\t          }\n\t      });\n\t    }\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      message: {}\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _coerceBoolean = __webpack_require__(1);\n\t\n\tvar _coerceBoolean2 = _interopRequireDefault(_coerceBoolean);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: {\n\t    small: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: false\n\t    },\n\t    big: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: true\n\t    },\n\t    disable: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: false\n\t    },\n\t    iconfixedleft: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: false\n\t    },\n\t    iconfixedright: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: false\n\t    },\n\t    setstyle: {\n\t      type: String,\n\t      default: 'a'\n\t    },\n\t    stylea: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    styleb: {\n\t      type: Boolean,\n\t      default: false\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var small = this.small;\n\t    if (small) {\n\t      this.big = false;\n\t    }\n\t    if (this.setstyle === 'a') {\n\t      this.stylea = true;\n\t      this.styleb = false;\n\t    }\n\t    if (this.setstyle === 'b') {\n\t      this.styleb = true;\n\t      this.stylea = false;\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _coerceBoolean = __webpack_require__(1);\n\t\n\tvar _coerceBoolean2 = _interopRequireDefault(_coerceBoolean);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: {\n\t    textsize: {\n\t      type: Number,\n\t      default: 1\n\t    },\n\t    textcolor: {\n\t      type: String\n\t    },\n\t    lefticon: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: true\n\t    },\n\t    lefticonname: {\n\t      type: String,\n\t      default: ''\n\t    },\n\t    handlerlefticon: {\n\t      type: Function,\n\t      default: function _default() {\n\t        return false;\n\t      }\n\t    },\n\t    righticon: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: true\n\t    },\n\t    righticonname: {\n\t      type: String,\n\t      default: ''\n\t    },\n\t    handlerrighticon: {\n\t      type: Function,\n\t      default: function _default() {\n\t        return false;\n\t      }\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    console.log('this', this);\n\t  }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _coerceBoolean = __webpack_require__(1);\n\t\n\tvar _coerceBoolean2 = _interopRequireDefault(_coerceBoolean);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: {\n\t    show: {\n\t      type: Boolean,\n\t      coerce: _coerceBoolean2.default,\n\t      default: false\n\t    },\n\t    top: {\n\t      type: Number,\n\t      default: 0\n\t    },\n\t    loadersize: {\n\t      type: Number,\n\t      default: 1\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, global, module) {/*!\n\t * @overview es6-promise - a tiny implementation of Promises/A+.\n\t * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n\t * @license   Licensed under MIT license\n\t *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n\t * @version   3.2.1\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t    function lib$es6$promise$utils$$objectOrFunction(x) {\n\t      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n\t    }\n\t\n\t    function lib$es6$promise$utils$$isFunction(x) {\n\t      return typeof x === 'function';\n\t    }\n\t\n\t    function lib$es6$promise$utils$$isMaybeThenable(x) {\n\t      return typeof x === 'object' && x !== null;\n\t    }\n\t\n\t    var lib$es6$promise$utils$$_isArray;\n\t    if (!Array.isArray) {\n\t      lib$es6$promise$utils$$_isArray = function (x) {\n\t        return Object.prototype.toString.call(x) === '[object Array]';\n\t      };\n\t    } else {\n\t      lib$es6$promise$utils$$_isArray = Array.isArray;\n\t    }\n\t\n\t    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n\t    var lib$es6$promise$asap$$len = 0;\n\t    var lib$es6$promise$asap$$vertxNext;\n\t    var lib$es6$promise$asap$$customSchedulerFn;\n\t\n\t    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n\t      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n\t      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n\t      lib$es6$promise$asap$$len += 2;\n\t      if (lib$es6$promise$asap$$len === 2) {\n\t        // If len is 2, that means that we need to schedule an async flush.\n\t        // If additional callbacks are queued before the queue is flushed, they\n\t        // will be processed by this flush that we are scheduling.\n\t        if (lib$es6$promise$asap$$customSchedulerFn) {\n\t          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n\t        } else {\n\t          lib$es6$promise$asap$$scheduleFlush();\n\t        }\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n\t      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n\t    }\n\t\n\t    function lib$es6$promise$asap$$setAsap(asapFn) {\n\t      lib$es6$promise$asap$$asap = asapFn;\n\t    }\n\t\n\t    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n\t    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n\t    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n\t    var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\t\n\t    // test for web worker but not in IE10\n\t    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n\t      typeof importScripts !== 'undefined' &&\n\t      typeof MessageChannel !== 'undefined';\n\t\n\t    // node\n\t    function lib$es6$promise$asap$$useNextTick() {\n\t      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n\t      // see https://github.com/cujojs/when/issues/410 for details\n\t      return function() {\n\t        process.nextTick(lib$es6$promise$asap$$flush);\n\t      };\n\t    }\n\t\n\t    // vertx\n\t    function lib$es6$promise$asap$$useVertxTimer() {\n\t      return function() {\n\t        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n\t      };\n\t    }\n\t\n\t    function lib$es6$promise$asap$$useMutationObserver() {\n\t      var iterations = 0;\n\t      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n\t      var node = document.createTextNode('');\n\t      observer.observe(node, { characterData: true });\n\t\n\t      return function() {\n\t        node.data = (iterations = ++iterations % 2);\n\t      };\n\t    }\n\t\n\t    // web worker\n\t    function lib$es6$promise$asap$$useMessageChannel() {\n\t      var channel = new MessageChannel();\n\t      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n\t      return function () {\n\t        channel.port2.postMessage(0);\n\t      };\n\t    }\n\t\n\t    function lib$es6$promise$asap$$useSetTimeout() {\n\t      return function() {\n\t        setTimeout(lib$es6$promise$asap$$flush, 1);\n\t      };\n\t    }\n\t\n\t    var lib$es6$promise$asap$$queue = new Array(1000);\n\t    function lib$es6$promise$asap$$flush() {\n\t      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n\t        var callback = lib$es6$promise$asap$$queue[i];\n\t        var arg = lib$es6$promise$asap$$queue[i+1];\n\t\n\t        callback(arg);\n\t\n\t        lib$es6$promise$asap$$queue[i] = undefined;\n\t        lib$es6$promise$asap$$queue[i+1] = undefined;\n\t      }\n\t\n\t      lib$es6$promise$asap$$len = 0;\n\t    }\n\t\n\t    function lib$es6$promise$asap$$attemptVertx() {\n\t      try {\n\t        var r = require;\n\t        var vertx = __webpack_require__(52);\n\t        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n\t        return lib$es6$promise$asap$$useVertxTimer();\n\t      } catch(e) {\n\t        return lib$es6$promise$asap$$useSetTimeout();\n\t      }\n\t    }\n\t\n\t    var lib$es6$promise$asap$$scheduleFlush;\n\t    // Decide what async method to use to triggering processing of queued callbacks:\n\t    if (lib$es6$promise$asap$$isNode) {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n\t    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n\t    } else if (lib$es6$promise$asap$$isWorker) {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n\t    } else if (lib$es6$promise$asap$$browserWindow === undefined && \"function\" === 'function') {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n\t    } else {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n\t    }\n\t    function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n\t      var parent = this;\n\t\n\t      var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\t\n\t      if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {\n\t        lib$es6$promise$$internal$$makePromise(child);\n\t      }\n\t\n\t      var state = parent._state;\n\t\n\t      if (state) {\n\t        var callback = arguments[state - 1];\n\t        lib$es6$promise$asap$$asap(function(){\n\t          lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);\n\t        });\n\t      } else {\n\t        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n\t      }\n\t\n\t      return child;\n\t    }\n\t    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n\t    function lib$es6$promise$promise$resolve$$resolve(object) {\n\t      /*jshint validthis:true */\n\t      var Constructor = this;\n\t\n\t      if (object && typeof object === 'object' && object.constructor === Constructor) {\n\t        return object;\n\t      }\n\t\n\t      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\t      lib$es6$promise$$internal$$resolve(promise, object);\n\t      return promise;\n\t    }\n\t    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n\t    var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);\n\t\n\t    function lib$es6$promise$$internal$$noop() {}\n\t\n\t    var lib$es6$promise$$internal$$PENDING   = void 0;\n\t    var lib$es6$promise$$internal$$FULFILLED = 1;\n\t    var lib$es6$promise$$internal$$REJECTED  = 2;\n\t\n\t    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\t\n\t    function lib$es6$promise$$internal$$selfFulfillment() {\n\t      return new TypeError(\"You cannot resolve a promise with itself\");\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$cannotReturnOwn() {\n\t      return new TypeError('A promises callback cannot return that same promise.');\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$getThen(promise) {\n\t      try {\n\t        return promise.then;\n\t      } catch(error) {\n\t        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n\t        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n\t      try {\n\t        then.call(value, fulfillmentHandler, rejectionHandler);\n\t      } catch(e) {\n\t        return e;\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n\t       lib$es6$promise$asap$$asap(function(promise) {\n\t        var sealed = false;\n\t        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n\t          if (sealed) { return; }\n\t          sealed = true;\n\t          if (thenable !== value) {\n\t            lib$es6$promise$$internal$$resolve(promise, value);\n\t          } else {\n\t            lib$es6$promise$$internal$$fulfill(promise, value);\n\t          }\n\t        }, function(reason) {\n\t          if (sealed) { return; }\n\t          sealed = true;\n\t\n\t          lib$es6$promise$$internal$$reject(promise, reason);\n\t        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\t\n\t        if (!sealed && error) {\n\t          sealed = true;\n\t          lib$es6$promise$$internal$$reject(promise, error);\n\t        }\n\t      }, promise);\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n\t      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n\t        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n\t      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n\t        lib$es6$promise$$internal$$reject(promise, thenable._result);\n\t      } else {\n\t        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n\t          lib$es6$promise$$internal$$resolve(promise, value);\n\t        }, function(reason) {\n\t          lib$es6$promise$$internal$$reject(promise, reason);\n\t        });\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n\t      if (maybeThenable.constructor === promise.constructor &&\n\t          then === lib$es6$promise$then$$default &&\n\t          constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n\t        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n\t      } else {\n\t        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n\t          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n\t        } else if (then === undefined) {\n\t          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n\t        } else if (lib$es6$promise$utils$$isFunction(then)) {\n\t          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n\t        } else {\n\t          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n\t        }\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$resolve(promise, value) {\n\t      if (promise === value) {\n\t        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n\t      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n\t        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n\t      } else {\n\t        lib$es6$promise$$internal$$fulfill(promise, value);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$publishRejection(promise) {\n\t      if (promise._onerror) {\n\t        promise._onerror(promise._result);\n\t      }\n\t\n\t      lib$es6$promise$$internal$$publish(promise);\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$fulfill(promise, value) {\n\t      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\t\n\t      promise._result = value;\n\t      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\t\n\t      if (promise._subscribers.length !== 0) {\n\t        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$reject(promise, reason) {\n\t      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\t      promise._state = lib$es6$promise$$internal$$REJECTED;\n\t      promise._result = reason;\n\t\n\t      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n\t      var subscribers = parent._subscribers;\n\t      var length = subscribers.length;\n\t\n\t      parent._onerror = null;\n\t\n\t      subscribers[length] = child;\n\t      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n\t      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\t\n\t      if (length === 0 && parent._state) {\n\t        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$publish(promise) {\n\t      var subscribers = promise._subscribers;\n\t      var settled = promise._state;\n\t\n\t      if (subscribers.length === 0) { return; }\n\t\n\t      var child, callback, detail = promise._result;\n\t\n\t      for (var i = 0; i < subscribers.length; i += 3) {\n\t        child = subscribers[i];\n\t        callback = subscribers[i + settled];\n\t\n\t        if (child) {\n\t          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n\t        } else {\n\t          callback(detail);\n\t        }\n\t      }\n\t\n\t      promise._subscribers.length = 0;\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$ErrorObject() {\n\t      this.error = null;\n\t    }\n\t\n\t    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\t\n\t    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n\t      try {\n\t        return callback(detail);\n\t      } catch(e) {\n\t        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n\t        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n\t      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n\t          value, error, succeeded, failed;\n\t\n\t      if (hasCallback) {\n\t        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\t\n\t        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n\t          failed = true;\n\t          error = value.error;\n\t          value = null;\n\t        } else {\n\t          succeeded = true;\n\t        }\n\t\n\t        if (promise === value) {\n\t          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n\t          return;\n\t        }\n\t\n\t      } else {\n\t        value = detail;\n\t        succeeded = true;\n\t      }\n\t\n\t      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n\t        // noop\n\t      } else if (hasCallback && succeeded) {\n\t        lib$es6$promise$$internal$$resolve(promise, value);\n\t      } else if (failed) {\n\t        lib$es6$promise$$internal$$reject(promise, error);\n\t      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n\t        lib$es6$promise$$internal$$fulfill(promise, value);\n\t      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n\t        lib$es6$promise$$internal$$reject(promise, value);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n\t      try {\n\t        resolver(function resolvePromise(value){\n\t          lib$es6$promise$$internal$$resolve(promise, value);\n\t        }, function rejectPromise(reason) {\n\t          lib$es6$promise$$internal$$reject(promise, reason);\n\t        });\n\t      } catch(e) {\n\t        lib$es6$promise$$internal$$reject(promise, e);\n\t      }\n\t    }\n\t\n\t    var lib$es6$promise$$internal$$id = 0;\n\t    function lib$es6$promise$$internal$$nextId() {\n\t      return lib$es6$promise$$internal$$id++;\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$makePromise(promise) {\n\t      promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;\n\t      promise._state = undefined;\n\t      promise._result = undefined;\n\t      promise._subscribers = [];\n\t    }\n\t\n\t    function lib$es6$promise$promise$all$$all(entries) {\n\t      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n\t    }\n\t    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n\t    function lib$es6$promise$promise$race$$race(entries) {\n\t      /*jshint validthis:true */\n\t      var Constructor = this;\n\t\n\t      if (!lib$es6$promise$utils$$isArray(entries)) {\n\t        return new Constructor(function(resolve, reject) {\n\t          reject(new TypeError('You must pass an array to race.'));\n\t        });\n\t      } else {\n\t        return new Constructor(function(resolve, reject) {\n\t          var length = entries.length;\n\t          for (var i = 0; i < length; i++) {\n\t            Constructor.resolve(entries[i]).then(resolve, reject);\n\t          }\n\t        });\n\t      }\n\t    }\n\t    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n\t    function lib$es6$promise$promise$reject$$reject(reason) {\n\t      /*jshint validthis:true */\n\t      var Constructor = this;\n\t      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\t      lib$es6$promise$$internal$$reject(promise, reason);\n\t      return promise;\n\t    }\n\t    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\t\n\t\n\t    function lib$es6$promise$promise$$needsResolver() {\n\t      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n\t    }\n\t\n\t    function lib$es6$promise$promise$$needsNew() {\n\t      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n\t    }\n\t\n\t    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n\t    /**\n\t      Promise objects represent the eventual result of an asynchronous operation. The\n\t      primary way of interacting with a promise is through its `then` method, which\n\t      registers callbacks to receive either a promise's eventual value or the reason\n\t      why the promise cannot be fulfilled.\n\t\n\t      Terminology\n\t      -----------\n\t\n\t      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n\t      - `thenable` is an object or function that defines a `then` method.\n\t      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n\t      - `exception` is a value that is thrown using the throw statement.\n\t      - `reason` is a value that indicates why a promise was rejected.\n\t      - `settled` the final resting state of a promise, fulfilled or rejected.\n\t\n\t      A promise can be in one of three states: pending, fulfilled, or rejected.\n\t\n\t      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n\t      state.  Promises that are rejected have a rejection reason and are in the\n\t      rejected state.  A fulfillment value is never a thenable.\n\t\n\t      Promises can also be said to *resolve* a value.  If this value is also a\n\t      promise, then the original promise's settled state will match the value's\n\t      settled state.  So a promise that *resolves* a promise that rejects will\n\t      itself reject, and a promise that *resolves* a promise that fulfills will\n\t      itself fulfill.\n\t\n\t\n\t      Basic Usage:\n\t      ------------\n\t\n\t      ```js\n\t      var promise = new Promise(function(resolve, reject) {\n\t        // on success\n\t        resolve(value);\n\t\n\t        // on failure\n\t        reject(reason);\n\t      });\n\t\n\t      promise.then(function(value) {\n\t        // on fulfillment\n\t      }, function(reason) {\n\t        // on rejection\n\t      });\n\t      ```\n\t\n\t      Advanced Usage:\n\t      ---------------\n\t\n\t      Promises shine when abstracting away asynchronous interactions such as\n\t      `XMLHttpRequest`s.\n\t\n\t      ```js\n\t      function getJSON(url) {\n\t        return new Promise(function(resolve, reject){\n\t          var xhr = new XMLHttpRequest();\n\t\n\t          xhr.open('GET', url);\n\t          xhr.onreadystatechange = handler;\n\t          xhr.responseType = 'json';\n\t          xhr.setRequestHeader('Accept', 'application/json');\n\t          xhr.send();\n\t\n\t          function handler() {\n\t            if (this.readyState === this.DONE) {\n\t              if (this.status === 200) {\n\t                resolve(this.response);\n\t              } else {\n\t                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n\t              }\n\t            }\n\t          };\n\t        });\n\t      }\n\t\n\t      getJSON('/posts.json').then(function(json) {\n\t        // on fulfillment\n\t      }, function(reason) {\n\t        // on rejection\n\t      });\n\t      ```\n\t\n\t      Unlike callbacks, promises are great composable primitives.\n\t\n\t      ```js\n\t      Promise.all([\n\t        getJSON('/posts'),\n\t        getJSON('/comments')\n\t      ]).then(function(values){\n\t        values[0] // => postsJSON\n\t        values[1] // => commentsJSON\n\t\n\t        return values;\n\t      });\n\t      ```\n\t\n\t      @class Promise\n\t      @param {function} resolver\n\t      Useful for tooling.\n\t      @constructor\n\t    */\n\t    function lib$es6$promise$promise$$Promise(resolver) {\n\t      this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();\n\t      this._result = this._state = undefined;\n\t      this._subscribers = [];\n\t\n\t      if (lib$es6$promise$$internal$$noop !== resolver) {\n\t        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n\t        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n\t      }\n\t    }\n\t\n\t    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n\t    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n\t    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n\t    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n\t    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n\t    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n\t    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\t\n\t    lib$es6$promise$promise$$Promise.prototype = {\n\t      constructor: lib$es6$promise$promise$$Promise,\n\t\n\t    /**\n\t      The primary way of interacting with a promise is through its `then` method,\n\t      which registers callbacks to receive either a promise's eventual value or the\n\t      reason why the promise cannot be fulfilled.\n\t\n\t      ```js\n\t      findUser().then(function(user){\n\t        // user is available\n\t      }, function(reason){\n\t        // user is unavailable, and you are given the reason why\n\t      });\n\t      ```\n\t\n\t      Chaining\n\t      --------\n\t\n\t      The return value of `then` is itself a promise.  This second, 'downstream'\n\t      promise is resolved with the return value of the first promise's fulfillment\n\t      or rejection handler, or rejected if the handler throws an exception.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        return user.name;\n\t      }, function (reason) {\n\t        return 'default name';\n\t      }).then(function (userName) {\n\t        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n\t        // will be `'default name'`\n\t      });\n\t\n\t      findUser().then(function (user) {\n\t        throw new Error('Found user, but still unhappy');\n\t      }, function (reason) {\n\t        throw new Error('`findUser` rejected and we're unhappy');\n\t      }).then(function (value) {\n\t        // never reached\n\t      }, function (reason) {\n\t        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n\t        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n\t      });\n\t      ```\n\t      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        throw new PedagogicalException('Upstream error');\n\t      }).then(function (value) {\n\t        // never reached\n\t      }).then(function (value) {\n\t        // never reached\n\t      }, function (reason) {\n\t        // The `PedgagocialException` is propagated all the way down to here\n\t      });\n\t      ```\n\t\n\t      Assimilation\n\t      ------------\n\t\n\t      Sometimes the value you want to propagate to a downstream promise can only be\n\t      retrieved asynchronously. This can be achieved by returning a promise in the\n\t      fulfillment or rejection handler. The downstream promise will then be pending\n\t      until the returned promise is settled. This is called *assimilation*.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        return findCommentsByAuthor(user);\n\t      }).then(function (comments) {\n\t        // The user's comments are now available\n\t      });\n\t      ```\n\t\n\t      If the assimliated promise rejects, then the downstream promise will also reject.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        return findCommentsByAuthor(user);\n\t      }).then(function (comments) {\n\t        // If `findCommentsByAuthor` fulfills, we'll have the value here\n\t      }, function (reason) {\n\t        // If `findCommentsByAuthor` rejects, we'll have the reason here\n\t      });\n\t      ```\n\t\n\t      Simple Example\n\t      --------------\n\t\n\t      Synchronous Example\n\t\n\t      ```javascript\n\t      var result;\n\t\n\t      try {\n\t        result = findResult();\n\t        // success\n\t      } catch(reason) {\n\t        // failure\n\t      }\n\t      ```\n\t\n\t      Errback Example\n\t\n\t      ```js\n\t      findResult(function(result, err){\n\t        if (err) {\n\t          // failure\n\t        } else {\n\t          // success\n\t        }\n\t      });\n\t      ```\n\t\n\t      Promise Example;\n\t\n\t      ```javascript\n\t      findResult().then(function(result){\n\t        // success\n\t      }, function(reason){\n\t        // failure\n\t      });\n\t      ```\n\t\n\t      Advanced Example\n\t      --------------\n\t\n\t      Synchronous Example\n\t\n\t      ```javascript\n\t      var author, books;\n\t\n\t      try {\n\t        author = findAuthor();\n\t        books  = findBooksByAuthor(author);\n\t        // success\n\t      } catch(reason) {\n\t        // failure\n\t      }\n\t      ```\n\t\n\t      Errback Example\n\t\n\t      ```js\n\t\n\t      function foundBooks(books) {\n\t\n\t      }\n\t\n\t      function failure(reason) {\n\t\n\t      }\n\t\n\t      findAuthor(function(author, err){\n\t        if (err) {\n\t          failure(err);\n\t          // failure\n\t        } else {\n\t          try {\n\t            findBoooksByAuthor(author, function(books, err) {\n\t              if (err) {\n\t                failure(err);\n\t              } else {\n\t                try {\n\t                  foundBooks(books);\n\t                } catch(reason) {\n\t                  failure(reason);\n\t                }\n\t              }\n\t            });\n\t          } catch(error) {\n\t            failure(err);\n\t          }\n\t          // success\n\t        }\n\t      });\n\t      ```\n\t\n\t      Promise Example;\n\t\n\t      ```javascript\n\t      findAuthor().\n\t        then(findBooksByAuthor).\n\t        then(function(books){\n\t          // found books\n\t      }).catch(function(reason){\n\t        // something went wrong\n\t      });\n\t      ```\n\t\n\t      @method then\n\t      @param {Function} onFulfilled\n\t      @param {Function} onRejected\n\t      Useful for tooling.\n\t      @return {Promise}\n\t    */\n\t      then: lib$es6$promise$then$$default,\n\t\n\t    /**\n\t      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n\t      as the catch block of a try/catch statement.\n\t\n\t      ```js\n\t      function findAuthor(){\n\t        throw new Error('couldn't find that author');\n\t      }\n\t\n\t      // synchronous\n\t      try {\n\t        findAuthor();\n\t      } catch(reason) {\n\t        // something went wrong\n\t      }\n\t\n\t      // async with promises\n\t      findAuthor().catch(function(reason){\n\t        // something went wrong\n\t      });\n\t      ```\n\t\n\t      @method catch\n\t      @param {Function} onRejection\n\t      Useful for tooling.\n\t      @return {Promise}\n\t    */\n\t      'catch': function(onRejection) {\n\t        return this.then(null, onRejection);\n\t      }\n\t    };\n\t    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\t    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n\t      this._instanceConstructor = Constructor;\n\t      this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\t\n\t      if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {\n\t        lib$es6$promise$$internal$$makePromise(this.promise);\n\t      }\n\t\n\t      if (lib$es6$promise$utils$$isArray(input)) {\n\t        this._input     = input;\n\t        this.length     = input.length;\n\t        this._remaining = input.length;\n\t\n\t        this._result = new Array(this.length);\n\t\n\t        if (this.length === 0) {\n\t          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n\t        } else {\n\t          this.length = this.length || 0;\n\t          this._enumerate();\n\t          if (this._remaining === 0) {\n\t            lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n\t          }\n\t        }\n\t      } else {\n\t        lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$enumerator$$validationError() {\n\t      return new Error('Array Methods must be provided an Array');\n\t    }\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n\t      var length  = this.length;\n\t      var input   = this._input;\n\t\n\t      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n\t        this._eachEntry(input[i], i);\n\t      }\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n\t      var c = this._instanceConstructor;\n\t      var resolve = c.resolve;\n\t\n\t      if (resolve === lib$es6$promise$promise$resolve$$default) {\n\t        var then = lib$es6$promise$$internal$$getThen(entry);\n\t\n\t        if (then === lib$es6$promise$then$$default &&\n\t            entry._state !== lib$es6$promise$$internal$$PENDING) {\n\t          this._settledAt(entry._state, i, entry._result);\n\t        } else if (typeof then !== 'function') {\n\t          this._remaining--;\n\t          this._result[i] = entry;\n\t        } else if (c === lib$es6$promise$promise$$default) {\n\t          var promise = new c(lib$es6$promise$$internal$$noop);\n\t          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n\t          this._willSettleAt(promise, i);\n\t        } else {\n\t          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n\t        }\n\t      } else {\n\t        this._willSettleAt(resolve(entry), i);\n\t      }\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n\t      var promise = this.promise;\n\t\n\t      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n\t        this._remaining--;\n\t\n\t        if (state === lib$es6$promise$$internal$$REJECTED) {\n\t          lib$es6$promise$$internal$$reject(promise, value);\n\t        } else {\n\t          this._result[i] = value;\n\t        }\n\t      }\n\t\n\t      if (this._remaining === 0) {\n\t        lib$es6$promise$$internal$$fulfill(promise, this._result);\n\t      }\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n\t      var enumerator = this;\n\t\n\t      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n\t        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n\t      }, function(reason) {\n\t        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n\t      });\n\t    };\n\t    function lib$es6$promise$polyfill$$polyfill() {\n\t      var local;\n\t\n\t      if (typeof global !== 'undefined') {\n\t          local = global;\n\t      } else if (typeof self !== 'undefined') {\n\t          local = self;\n\t      } else {\n\t          try {\n\t              local = Function('return this')();\n\t          } catch (e) {\n\t              throw new Error('polyfill failed because global object is unavailable in this environment');\n\t          }\n\t      }\n\t\n\t      var P = local.Promise;\n\t\n\t      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n\t        return;\n\t      }\n\t\n\t      local.Promise = lib$es6$promise$promise$$default;\n\t    }\n\t    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\t\n\t    var lib$es6$promise$umd$$ES6Promise = {\n\t      'Promise': lib$es6$promise$promise$$default,\n\t      'polyfill': lib$es6$promise$polyfill$$default\n\t    };\n\t\n\t    /* global define:true module:true window: true */\n\t    if (\"function\" === 'function' && __webpack_require__(50)['amd']) {\n\t      !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return lib$es6$promise$umd$$ES6Promise; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module !== 'undefined' && module['exports']) {\n\t      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n\t    } else if (typeof this !== 'undefined') {\n\t      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n\t    }\n\t\n\t    lib$es6$promise$polyfill$$default();\n\t}).call(this);\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18), (function() { return this; }()), __webpack_require__(51)(module)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n\t * http://hammerjs.github.io/\n\t *\n\t * Copyright (c) 2016 Jorik Tangelder;\n\t * Licensed under the MIT license */\n\t(function(window, document, exportName, undefined) {\n\t  'use strict';\n\t\n\tvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\tvar TEST_ELEMENT = document.createElement('div');\n\t\n\tvar TYPE_FUNCTION = 'function';\n\t\n\tvar round = Math.round;\n\tvar abs = Math.abs;\n\tvar now = Date.now;\n\t\n\t/**\n\t * set a timeout with a given scope\n\t * @param {Function} fn\n\t * @param {Number} timeout\n\t * @param {Object} context\n\t * @returns {number}\n\t */\n\tfunction setTimeoutContext(fn, timeout, context) {\n\t    return setTimeout(bindFn(fn, context), timeout);\n\t}\n\t\n\t/**\n\t * if the argument is an array, we want to execute the fn on each entry\n\t * if it aint an array we don't want to do a thing.\n\t * this is used by all the methods that accept a single and array argument.\n\t * @param {*|Array} arg\n\t * @param {String} fn\n\t * @param {Object} [context]\n\t * @returns {Boolean}\n\t */\n\tfunction invokeArrayArg(arg, fn, context) {\n\t    if (Array.isArray(arg)) {\n\t        each(arg, context[fn], context);\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * walk objects and arrays\n\t * @param {Object} obj\n\t * @param {Function} iterator\n\t * @param {Object} context\n\t */\n\tfunction each(obj, iterator, context) {\n\t    var i;\n\t\n\t    if (!obj) {\n\t        return;\n\t    }\n\t\n\t    if (obj.forEach) {\n\t        obj.forEach(iterator, context);\n\t    } else if (obj.length !== undefined) {\n\t        i = 0;\n\t        while (i < obj.length) {\n\t            iterator.call(context, obj[i], i, obj);\n\t            i++;\n\t        }\n\t    } else {\n\t        for (i in obj) {\n\t            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * wrap a method with a deprecation warning and stack trace\n\t * @param {Function} method\n\t * @param {String} name\n\t * @param {String} message\n\t * @returns {Function} A new function wrapping the supplied method.\n\t */\n\tfunction deprecate(method, name, message) {\n\t    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n\t    return function() {\n\t        var e = new Error('get-stack-trace');\n\t        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n\t            .replace(/^\\s+at\\s+/gm, '')\n\t            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\t\n\t        var log = window.console && (window.console.warn || window.console.log);\n\t        if (log) {\n\t            log.call(window.console, deprecationMessage, stack);\n\t        }\n\t        return method.apply(this, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} target\n\t * @param {...Object} objects_to_assign\n\t * @returns {Object} target\n\t */\n\tvar assign;\n\tif (typeof Object.assign !== 'function') {\n\t    assign = function assign(target) {\n\t        if (target === undefined || target === null) {\n\t            throw new TypeError('Cannot convert undefined or null to object');\n\t        }\n\t\n\t        var output = Object(target);\n\t        for (var index = 1; index < arguments.length; index++) {\n\t            var source = arguments[index];\n\t            if (source !== undefined && source !== null) {\n\t                for (var nextKey in source) {\n\t                    if (source.hasOwnProperty(nextKey)) {\n\t                        output[nextKey] = source[nextKey];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return output;\n\t    };\n\t} else {\n\t    assign = Object.assign;\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @param {Boolean} [merge=false]\n\t * @returns {Object} dest\n\t */\n\tvar extend = deprecate(function extend(dest, src, merge) {\n\t    var keys = Object.keys(src);\n\t    var i = 0;\n\t    while (i < keys.length) {\n\t        if (!merge || (merge && dest[keys[i]] === undefined)) {\n\t            dest[keys[i]] = src[keys[i]];\n\t        }\n\t        i++;\n\t    }\n\t    return dest;\n\t}, 'extend', 'Use `assign`.');\n\t\n\t/**\n\t * merge the values from src in the dest.\n\t * means that properties that exist in dest will not be overwritten by src\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @returns {Object} dest\n\t */\n\tvar merge = deprecate(function merge(dest, src) {\n\t    return extend(dest, src, true);\n\t}, 'merge', 'Use `assign`.');\n\t\n\t/**\n\t * simple class inheritance\n\t * @param {Function} child\n\t * @param {Function} base\n\t * @param {Object} [properties]\n\t */\n\tfunction inherit(child, base, properties) {\n\t    var baseP = base.prototype,\n\t        childP;\n\t\n\t    childP = child.prototype = Object.create(baseP);\n\t    childP.constructor = child;\n\t    childP._super = baseP;\n\t\n\t    if (properties) {\n\t        assign(childP, properties);\n\t    }\n\t}\n\t\n\t/**\n\t * simple function bind\n\t * @param {Function} fn\n\t * @param {Object} context\n\t * @returns {Function}\n\t */\n\tfunction bindFn(fn, context) {\n\t    return function boundFn() {\n\t        return fn.apply(context, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * let a boolean value also be a function that must return a boolean\n\t * this first item in args will be used as the context\n\t * @param {Boolean|Function} val\n\t * @param {Array} [args]\n\t * @returns {Boolean}\n\t */\n\tfunction boolOrFn(val, args) {\n\t    if (typeof val == TYPE_FUNCTION) {\n\t        return val.apply(args ? args[0] || undefined : undefined, args);\n\t    }\n\t    return val;\n\t}\n\t\n\t/**\n\t * use the val2 when val1 is undefined\n\t * @param {*} val1\n\t * @param {*} val2\n\t * @returns {*}\n\t */\n\tfunction ifUndefined(val1, val2) {\n\t    return (val1 === undefined) ? val2 : val1;\n\t}\n\t\n\t/**\n\t * addEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction addEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.addEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * removeEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction removeEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.removeEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * find if a node is in the given parent\n\t * @method hasParent\n\t * @param {HTMLElement} node\n\t * @param {HTMLElement} parent\n\t * @return {Boolean} found\n\t */\n\tfunction hasParent(node, parent) {\n\t    while (node) {\n\t        if (node == parent) {\n\t            return true;\n\t        }\n\t        node = node.parentNode;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * small indexOf wrapper\n\t * @param {String} str\n\t * @param {String} find\n\t * @returns {Boolean} found\n\t */\n\tfunction inStr(str, find) {\n\t    return str.indexOf(find) > -1;\n\t}\n\t\n\t/**\n\t * split string on whitespace\n\t * @param {String} str\n\t * @returns {Array} words\n\t */\n\tfunction splitStr(str) {\n\t    return str.trim().split(/\\s+/g);\n\t}\n\t\n\t/**\n\t * find if a array contains the object using indexOf or a simple polyFill\n\t * @param {Array} src\n\t * @param {String} find\n\t * @param {String} [findByKey]\n\t * @return {Boolean|Number} false when not found, or the index\n\t */\n\tfunction inArray(src, find, findByKey) {\n\t    if (src.indexOf && !findByKey) {\n\t        return src.indexOf(find);\n\t    } else {\n\t        var i = 0;\n\t        while (i < src.length) {\n\t            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n\t                return i;\n\t            }\n\t            i++;\n\t        }\n\t        return -1;\n\t    }\n\t}\n\t\n\t/**\n\t * convert array-like objects to real arrays\n\t * @param {Object} obj\n\t * @returns {Array}\n\t */\n\tfunction toArray(obj) {\n\t    return Array.prototype.slice.call(obj, 0);\n\t}\n\t\n\t/**\n\t * unique array with objects based on a key (like 'id') or just by the array's value\n\t * @param {Array} src [{id:1},{id:2},{id:1}]\n\t * @param {String} [key]\n\t * @param {Boolean} [sort=False]\n\t * @returns {Array} [{id:1},{id:2}]\n\t */\n\tfunction uniqueArray(src, key, sort) {\n\t    var results = [];\n\t    var values = [];\n\t    var i = 0;\n\t\n\t    while (i < src.length) {\n\t        var val = key ? src[i][key] : src[i];\n\t        if (inArray(values, val) < 0) {\n\t            results.push(src[i]);\n\t        }\n\t        values[i] = val;\n\t        i++;\n\t    }\n\t\n\t    if (sort) {\n\t        if (!key) {\n\t            results = results.sort();\n\t        } else {\n\t            results = results.sort(function sortUniqueArray(a, b) {\n\t                return a[key] > b[key];\n\t            });\n\t        }\n\t    }\n\t\n\t    return results;\n\t}\n\t\n\t/**\n\t * get the prefixed property\n\t * @param {Object} obj\n\t * @param {String} property\n\t * @returns {String|Undefined} prefixed\n\t */\n\tfunction prefixed(obj, property) {\n\t    var prefix, prop;\n\t    var camelProp = property[0].toUpperCase() + property.slice(1);\n\t\n\t    var i = 0;\n\t    while (i < VENDOR_PREFIXES.length) {\n\t        prefix = VENDOR_PREFIXES[i];\n\t        prop = (prefix) ? prefix + camelProp : property;\n\t\n\t        if (prop in obj) {\n\t            return prop;\n\t        }\n\t        i++;\n\t    }\n\t    return undefined;\n\t}\n\t\n\t/**\n\t * get a unique id\n\t * @returns {number} uniqueId\n\t */\n\tvar _uniqueId = 1;\n\tfunction uniqueId() {\n\t    return _uniqueId++;\n\t}\n\t\n\t/**\n\t * get the window object of an element\n\t * @param {HTMLElement} element\n\t * @returns {DocumentView|Window}\n\t */\n\tfunction getWindowForElement(element) {\n\t    var doc = element.ownerDocument || element;\n\t    return (doc.defaultView || doc.parentWindow || window);\n\t}\n\t\n\tvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\t\n\tvar SUPPORT_TOUCH = ('ontouchstart' in window);\n\tvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n\tvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\t\n\tvar INPUT_TYPE_TOUCH = 'touch';\n\tvar INPUT_TYPE_PEN = 'pen';\n\tvar INPUT_TYPE_MOUSE = 'mouse';\n\tvar INPUT_TYPE_KINECT = 'kinect';\n\t\n\tvar COMPUTE_INTERVAL = 25;\n\t\n\tvar INPUT_START = 1;\n\tvar INPUT_MOVE = 2;\n\tvar INPUT_END = 4;\n\tvar INPUT_CANCEL = 8;\n\t\n\tvar DIRECTION_NONE = 1;\n\tvar DIRECTION_LEFT = 2;\n\tvar DIRECTION_RIGHT = 4;\n\tvar DIRECTION_UP = 8;\n\tvar DIRECTION_DOWN = 16;\n\t\n\tvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n\tvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n\tvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\t\n\tvar PROPS_XY = ['x', 'y'];\n\tvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\t\n\t/**\n\t * create new input type manager\n\t * @param {Manager} manager\n\t * @param {Function} callback\n\t * @returns {Input}\n\t * @constructor\n\t */\n\tfunction Input(manager, callback) {\n\t    var self = this;\n\t    this.manager = manager;\n\t    this.callback = callback;\n\t    this.element = manager.element;\n\t    this.target = manager.options.inputTarget;\n\t\n\t    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n\t    // so when disabled the input events are completely bypassed.\n\t    this.domHandler = function(ev) {\n\t        if (boolOrFn(manager.options.enable, [manager])) {\n\t            self.handler(ev);\n\t        }\n\t    };\n\t\n\t    this.init();\n\t\n\t}\n\t\n\tInput.prototype = {\n\t    /**\n\t     * should handle the inputEvent data and trigger the callback\n\t     * @virtual\n\t     */\n\t    handler: function() { },\n\t\n\t    /**\n\t     * bind the events\n\t     */\n\t    init: function() {\n\t        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    },\n\t\n\t    /**\n\t     * unbind the events\n\t     */\n\t    destroy: function() {\n\t        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    }\n\t};\n\t\n\t/**\n\t * create new input type manager\n\t * called by the Manager constructor\n\t * @param {Hammer} manager\n\t * @returns {Input}\n\t */\n\tfunction createInputInstance(manager) {\n\t    var Type;\n\t    var inputClass = manager.options.inputClass;\n\t\n\t    if (inputClass) {\n\t        Type = inputClass;\n\t    } else if (SUPPORT_POINTER_EVENTS) {\n\t        Type = PointerEventInput;\n\t    } else if (SUPPORT_ONLY_TOUCH) {\n\t        Type = TouchInput;\n\t    } else if (!SUPPORT_TOUCH) {\n\t        Type = MouseInput;\n\t    } else {\n\t        Type = TouchMouseInput;\n\t    }\n\t    return new (Type)(manager, inputHandler);\n\t}\n\t\n\t/**\n\t * handle input events\n\t * @param {Manager} manager\n\t * @param {String} eventType\n\t * @param {Object} input\n\t */\n\tfunction inputHandler(manager, eventType, input) {\n\t    var pointersLen = input.pointers.length;\n\t    var changedPointersLen = input.changedPointers.length;\n\t    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n\t    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\t\n\t    input.isFirst = !!isFirst;\n\t    input.isFinal = !!isFinal;\n\t\n\t    if (isFirst) {\n\t        manager.session = {};\n\t    }\n\t\n\t    // source event is the normalized value of the domEvents\n\t    // like 'touchstart, mouseup, pointerdown'\n\t    input.eventType = eventType;\n\t\n\t    // compute scale, rotation etc\n\t    computeInputData(manager, input);\n\t\n\t    // emit secret event\n\t    manager.emit('hammer.input', input);\n\t\n\t    manager.recognize(input);\n\t    manager.session.prevInput = input;\n\t}\n\t\n\t/**\n\t * extend the data with some usable properties like scale, rotate, velocity etc\n\t * @param {Object} manager\n\t * @param {Object} input\n\t */\n\tfunction computeInputData(manager, input) {\n\t    var session = manager.session;\n\t    var pointers = input.pointers;\n\t    var pointersLength = pointers.length;\n\t\n\t    // store the first input to calculate the distance and direction\n\t    if (!session.firstInput) {\n\t        session.firstInput = simpleCloneInputData(input);\n\t    }\n\t\n\t    // to compute scale and rotation we need to store the multiple touches\n\t    if (pointersLength > 1 && !session.firstMultiple) {\n\t        session.firstMultiple = simpleCloneInputData(input);\n\t    } else if (pointersLength === 1) {\n\t        session.firstMultiple = false;\n\t    }\n\t\n\t    var firstInput = session.firstInput;\n\t    var firstMultiple = session.firstMultiple;\n\t    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\t\n\t    var center = input.center = getCenter(pointers);\n\t    input.timeStamp = now();\n\t    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\t\n\t    input.angle = getAngle(offsetCenter, center);\n\t    input.distance = getDistance(offsetCenter, center);\n\t\n\t    computeDeltaXY(session, input);\n\t    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\t\n\t    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n\t    input.overallVelocityX = overallVelocity.x;\n\t    input.overallVelocityY = overallVelocity.y;\n\t    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\t\n\t    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n\t    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\t\n\t    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n\t        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\t\n\t    computeIntervalInputData(session, input);\n\t\n\t    // find the correct target\n\t    var target = manager.element;\n\t    if (hasParent(input.srcEvent.target, target)) {\n\t        target = input.srcEvent.target;\n\t    }\n\t    input.target = target;\n\t}\n\t\n\tfunction computeDeltaXY(session, input) {\n\t    var center = input.center;\n\t    var offset = session.offsetDelta || {};\n\t    var prevDelta = session.prevDelta || {};\n\t    var prevInput = session.prevInput || {};\n\t\n\t    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n\t        prevDelta = session.prevDelta = {\n\t            x: prevInput.deltaX || 0,\n\t            y: prevInput.deltaY || 0\n\t        };\n\t\n\t        offset = session.offsetDelta = {\n\t            x: center.x,\n\t            y: center.y\n\t        };\n\t    }\n\t\n\t    input.deltaX = prevDelta.x + (center.x - offset.x);\n\t    input.deltaY = prevDelta.y + (center.y - offset.y);\n\t}\n\t\n\t/**\n\t * velocity is calculated every x ms\n\t * @param {Object} session\n\t * @param {Object} input\n\t */\n\tfunction computeIntervalInputData(session, input) {\n\t    var last = session.lastInterval || input,\n\t        deltaTime = input.timeStamp - last.timeStamp,\n\t        velocity, velocityX, velocityY, direction;\n\t\n\t    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n\t        var deltaX = input.deltaX - last.deltaX;\n\t        var deltaY = input.deltaY - last.deltaY;\n\t\n\t        var v = getVelocity(deltaTime, deltaX, deltaY);\n\t        velocityX = v.x;\n\t        velocityY = v.y;\n\t        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n\t        direction = getDirection(deltaX, deltaY);\n\t\n\t        session.lastInterval = input;\n\t    } else {\n\t        // use latest velocity info if it doesn't overtake a minimum period\n\t        velocity = last.velocity;\n\t        velocityX = last.velocityX;\n\t        velocityY = last.velocityY;\n\t        direction = last.direction;\n\t    }\n\t\n\t    input.velocity = velocity;\n\t    input.velocityX = velocityX;\n\t    input.velocityY = velocityY;\n\t    input.direction = direction;\n\t}\n\t\n\t/**\n\t * create a simple clone from the input used for storage of firstInput and firstMultiple\n\t * @param {Object} input\n\t * @returns {Object} clonedInputData\n\t */\n\tfunction simpleCloneInputData(input) {\n\t    // make a simple copy of the pointers because we will get a reference if we don't\n\t    // we only need clientXY for the calculations\n\t    var pointers = [];\n\t    var i = 0;\n\t    while (i < input.pointers.length) {\n\t        pointers[i] = {\n\t            clientX: round(input.pointers[i].clientX),\n\t            clientY: round(input.pointers[i].clientY)\n\t        };\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        timeStamp: now(),\n\t        pointers: pointers,\n\t        center: getCenter(pointers),\n\t        deltaX: input.deltaX,\n\t        deltaY: input.deltaY\n\t    };\n\t}\n\t\n\t/**\n\t * get the center of all the pointers\n\t * @param {Array} pointers\n\t * @return {Object} center contains `x` and `y` properties\n\t */\n\tfunction getCenter(pointers) {\n\t    var pointersLength = pointers.length;\n\t\n\t    // no need to loop when only one touch\n\t    if (pointersLength === 1) {\n\t        return {\n\t            x: round(pointers[0].clientX),\n\t            y: round(pointers[0].clientY)\n\t        };\n\t    }\n\t\n\t    var x = 0, y = 0, i = 0;\n\t    while (i < pointersLength) {\n\t        x += pointers[i].clientX;\n\t        y += pointers[i].clientY;\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        x: round(x / pointersLength),\n\t        y: round(y / pointersLength)\n\t    };\n\t}\n\t\n\t/**\n\t * calculate the velocity between two points. unit is in px per ms.\n\t * @param {Number} deltaTime\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Object} velocity `x` and `y`\n\t */\n\tfunction getVelocity(deltaTime, x, y) {\n\t    return {\n\t        x: x / deltaTime || 0,\n\t        y: y / deltaTime || 0\n\t    };\n\t}\n\t\n\t/**\n\t * get the direction between two points\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Number} direction\n\t */\n\tfunction getDirection(x, y) {\n\t    if (x === y) {\n\t        return DIRECTION_NONE;\n\t    }\n\t\n\t    if (abs(x) >= abs(y)) {\n\t        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t    }\n\t    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n\t}\n\t\n\t/**\n\t * calculate the absolute distance between two points\n\t * @param {Object} p1 {x, y}\n\t * @param {Object} p2 {x, y}\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} distance\n\t */\n\tfunction getDistance(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t\n\t    return Math.sqrt((x * x) + (y * y));\n\t}\n\t\n\t/**\n\t * calculate the angle between two coordinates\n\t * @param {Object} p1\n\t * @param {Object} p2\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} angle\n\t */\n\tfunction getAngle(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t    return Math.atan2(y, x) * 180 / Math.PI;\n\t}\n\t\n\t/**\n\t * calculate the rotation degrees between two pointersets\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} rotation\n\t */\n\tfunction getRotation(start, end) {\n\t    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\t}\n\t\n\t/**\n\t * calculate the scale factor between two pointersets\n\t * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} scale\n\t */\n\tfunction getScale(start, end) {\n\t    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\t}\n\t\n\tvar MOUSE_INPUT_MAP = {\n\t    mousedown: INPUT_START,\n\t    mousemove: INPUT_MOVE,\n\t    mouseup: INPUT_END\n\t};\n\t\n\tvar MOUSE_ELEMENT_EVENTS = 'mousedown';\n\tvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\t\n\t/**\n\t * Mouse events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction MouseInput() {\n\t    this.evEl = MOUSE_ELEMENT_EVENTS;\n\t    this.evWin = MOUSE_WINDOW_EVENTS;\n\t\n\t    this.pressed = false; // mousedown state\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(MouseInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function MEhandler(ev) {\n\t        var eventType = MOUSE_INPUT_MAP[ev.type];\n\t\n\t        // on start we want to have the left mouse button down\n\t        if (eventType & INPUT_START && ev.button === 0) {\n\t            this.pressed = true;\n\t        }\n\t\n\t        if (eventType & INPUT_MOVE && ev.which !== 1) {\n\t            eventType = INPUT_END;\n\t        }\n\t\n\t        // mouse must be down\n\t        if (!this.pressed) {\n\t            return;\n\t        }\n\t\n\t        if (eventType & INPUT_END) {\n\t            this.pressed = false;\n\t        }\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: [ev],\n\t            changedPointers: [ev],\n\t            pointerType: INPUT_TYPE_MOUSE,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\tvar POINTER_INPUT_MAP = {\n\t    pointerdown: INPUT_START,\n\t    pointermove: INPUT_MOVE,\n\t    pointerup: INPUT_END,\n\t    pointercancel: INPUT_CANCEL,\n\t    pointerout: INPUT_CANCEL\n\t};\n\t\n\t// in IE10 the pointer types is defined as an enum\n\tvar IE10_POINTER_TYPE_ENUM = {\n\t    2: INPUT_TYPE_TOUCH,\n\t    3: INPUT_TYPE_PEN,\n\t    4: INPUT_TYPE_MOUSE,\n\t    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\t};\n\t\n\tvar POINTER_ELEMENT_EVENTS = 'pointerdown';\n\tvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\t\n\t// IE10 has prefixed support, and case-sensitive\n\tif (window.MSPointerEvent && !window.PointerEvent) {\n\t    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n\t    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n\t}\n\t\n\t/**\n\t * Pointer events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction PointerEventInput() {\n\t    this.evEl = POINTER_ELEMENT_EVENTS;\n\t    this.evWin = POINTER_WINDOW_EVENTS;\n\t\n\t    Input.apply(this, arguments);\n\t\n\t    this.store = (this.manager.session.pointerEvents = []);\n\t}\n\t\n\tinherit(PointerEventInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function PEhandler(ev) {\n\t        var store = this.store;\n\t        var removePointer = false;\n\t\n\t        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n\t        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n\t        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\t\n\t        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\t\n\t        // get index of the event in the store\n\t        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\t\n\t        // start and mouse must be down\n\t        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n\t            if (storeIndex < 0) {\n\t                store.push(ev);\n\t                storeIndex = store.length - 1;\n\t            }\n\t        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t            removePointer = true;\n\t        }\n\t\n\t        // it not found, so the pointer hasn't been down (so it's probably a hover)\n\t        if (storeIndex < 0) {\n\t            return;\n\t        }\n\t\n\t        // update the event in the store\n\t        store[storeIndex] = ev;\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: store,\n\t            changedPointers: [ev],\n\t            pointerType: pointerType,\n\t            srcEvent: ev\n\t        });\n\t\n\t        if (removePointer) {\n\t            // remove from the store\n\t            store.splice(storeIndex, 1);\n\t        }\n\t    }\n\t});\n\t\n\tvar SINGLE_TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n\tvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction SingleTouchInput() {\n\t    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n\t    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n\t    this.started = false;\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(SingleTouchInput, Input, {\n\t    handler: function TEhandler(ev) {\n\t        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\t\n\t        // should we handle the touch events?\n\t        if (type === INPUT_START) {\n\t            this.started = true;\n\t        }\n\t\n\t        if (!this.started) {\n\t            return;\n\t        }\n\t\n\t        var touches = normalizeSingleTouches.call(this, ev, type);\n\t\n\t        // when done, reset the started state\n\t        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n\t            this.started = false;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction normalizeSingleTouches(ev, type) {\n\t    var all = toArray(ev.touches);\n\t    var changed = toArray(ev.changedTouches);\n\t\n\t    if (type & (INPUT_END | INPUT_CANCEL)) {\n\t        all = uniqueArray(all.concat(changed), 'identifier', true);\n\t    }\n\t\n\t    return [all, changed];\n\t}\n\t\n\tvar TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Multi-user touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction TouchInput() {\n\t    this.evTarget = TOUCH_TARGET_EVENTS;\n\t    this.targetIds = {};\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(TouchInput, Input, {\n\t    handler: function MTEhandler(ev) {\n\t        var type = TOUCH_INPUT_MAP[ev.type];\n\t        var touches = getTouches.call(this, ev, type);\n\t        if (!touches) {\n\t            return;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction getTouches(ev, type) {\n\t    var allTouches = toArray(ev.touches);\n\t    var targetIds = this.targetIds;\n\t\n\t    // when there is only one touch, the process can be simplified\n\t    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n\t        targetIds[allTouches[0].identifier] = true;\n\t        return [allTouches, allTouches];\n\t    }\n\t\n\t    var i,\n\t        targetTouches,\n\t        changedTouches = toArray(ev.changedTouches),\n\t        changedTargetTouches = [],\n\t        target = this.target;\n\t\n\t    // get target touches from touches\n\t    targetTouches = allTouches.filter(function(touch) {\n\t        return hasParent(touch.target, target);\n\t    });\n\t\n\t    // collect touches\n\t    if (type === INPUT_START) {\n\t        i = 0;\n\t        while (i < targetTouches.length) {\n\t            targetIds[targetTouches[i].identifier] = true;\n\t            i++;\n\t        }\n\t    }\n\t\n\t    // filter changed touches to only contain touches that exist in the collected target ids\n\t    i = 0;\n\t    while (i < changedTouches.length) {\n\t        if (targetIds[changedTouches[i].identifier]) {\n\t            changedTargetTouches.push(changedTouches[i]);\n\t        }\n\t\n\t        // cleanup removed touches\n\t        if (type & (INPUT_END | INPUT_CANCEL)) {\n\t            delete targetIds[changedTouches[i].identifier];\n\t        }\n\t        i++;\n\t    }\n\t\n\t    if (!changedTargetTouches.length) {\n\t        return;\n\t    }\n\t\n\t    return [\n\t        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n\t        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n\t        changedTargetTouches\n\t    ];\n\t}\n\t\n\t/**\n\t * Combined touch and mouse input\n\t *\n\t * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n\t * This because touch devices also emit mouse events while doing a touch.\n\t *\n\t * @constructor\n\t * @extends Input\n\t */\n\t\n\tvar DEDUP_TIMEOUT = 2500;\n\tvar DEDUP_DISTANCE = 25;\n\t\n\tfunction TouchMouseInput() {\n\t    Input.apply(this, arguments);\n\t\n\t    var handler = bindFn(this.handler, this);\n\t    this.touch = new TouchInput(this.manager, handler);\n\t    this.mouse = new MouseInput(this.manager, handler);\n\t\n\t    this.primaryTouch = null;\n\t    this.lastTouches = [];\n\t}\n\t\n\tinherit(TouchMouseInput, Input, {\n\t    /**\n\t     * handle mouse and touch events\n\t     * @param {Hammer} manager\n\t     * @param {String} inputEvent\n\t     * @param {Object} inputData\n\t     */\n\t    handler: function TMEhandler(manager, inputEvent, inputData) {\n\t        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n\t            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\t\n\t        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n\t            return;\n\t        }\n\t\n\t        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\t        if (isTouch) {\n\t            recordTouches.call(this, inputEvent, inputData);\n\t        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n\t            return;\n\t        }\n\t\n\t        this.callback(manager, inputEvent, inputData);\n\t    },\n\t\n\t    /**\n\t     * remove the event listeners\n\t     */\n\t    destroy: function destroy() {\n\t        this.touch.destroy();\n\t        this.mouse.destroy();\n\t    }\n\t});\n\t\n\tfunction recordTouches(eventType, eventData) {\n\t    if (eventType & INPUT_START) {\n\t        this.primaryTouch = eventData.changedPointers[0].identifier;\n\t        setLastTouch.call(this, eventData);\n\t    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t        setLastTouch.call(this, eventData);\n\t    }\n\t}\n\t\n\tfunction setLastTouch(eventData) {\n\t    var touch = eventData.changedPointers[0];\n\t\n\t    if (touch.identifier === this.primaryTouch) {\n\t        var lastTouch = {x: touch.clientX, y: touch.clientY};\n\t        this.lastTouches.push(lastTouch);\n\t        var lts = this.lastTouches;\n\t        var removeLastTouch = function() {\n\t            var i = lts.indexOf(lastTouch);\n\t            if (i > -1) {\n\t                lts.splice(i, 1);\n\t            }\n\t        };\n\t        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n\t    }\n\t}\n\t\n\tfunction isSyntheticEvent(eventData) {\n\t    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n\t    for (var i = 0; i < this.lastTouches.length; i++) {\n\t        var t = this.lastTouches[i];\n\t        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n\t        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t}\n\t\n\tvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n\tvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\t\n\t// magical touchAction value\n\tvar TOUCH_ACTION_COMPUTE = 'compute';\n\tvar TOUCH_ACTION_AUTO = 'auto';\n\tvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\tvar TOUCH_ACTION_NONE = 'none';\n\tvar TOUCH_ACTION_PAN_X = 'pan-x';\n\tvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\tvar TOUCH_ACTION_MAP = getTouchActionProps();\n\t\n\t/**\n\t * Touch Action\n\t * sets the touchAction property or uses the js alternative\n\t * @param {Manager} manager\n\t * @param {String} value\n\t * @constructor\n\t */\n\tfunction TouchAction(manager, value) {\n\t    this.manager = manager;\n\t    this.set(value);\n\t}\n\t\n\tTouchAction.prototype = {\n\t    /**\n\t     * set the touchAction value on the element or enable the polyfill\n\t     * @param {String} value\n\t     */\n\t    set: function(value) {\n\t        // find out the touch-action by the event handlers\n\t        if (value == TOUCH_ACTION_COMPUTE) {\n\t            value = this.compute();\n\t        }\n\t\n\t        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n\t            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n\t        }\n\t        this.actions = value.toLowerCase().trim();\n\t    },\n\t\n\t    /**\n\t     * just re-set the touchAction value\n\t     */\n\t    update: function() {\n\t        this.set(this.manager.options.touchAction);\n\t    },\n\t\n\t    /**\n\t     * compute the value for the touchAction property based on the recognizer's settings\n\t     * @returns {String} value\n\t     */\n\t    compute: function() {\n\t        var actions = [];\n\t        each(this.manager.recognizers, function(recognizer) {\n\t            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n\t                actions = actions.concat(recognizer.getTouchAction());\n\t            }\n\t        });\n\t        return cleanTouchActions(actions.join(' '));\n\t    },\n\t\n\t    /**\n\t     * this method is called on each input cycle and provides the preventing of the browser behavior\n\t     * @param {Object} input\n\t     */\n\t    preventDefaults: function(input) {\n\t        var srcEvent = input.srcEvent;\n\t        var direction = input.offsetDirection;\n\t\n\t        // if the touch action did prevented once this session\n\t        if (this.manager.session.prevented) {\n\t            srcEvent.preventDefault();\n\t            return;\n\t        }\n\t\n\t        var actions = this.actions;\n\t        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n\t        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n\t        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\t\n\t        if (hasNone) {\n\t            //do not prevent defaults if this is a tap gesture\n\t\n\t            var isTapPointer = input.pointers.length === 1;\n\t            var isTapMovement = input.distance < 2;\n\t            var isTapTouchTime = input.deltaTime < 250;\n\t\n\t            if (isTapPointer && isTapMovement && isTapTouchTime) {\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (hasPanX && hasPanY) {\n\t            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n\t            return;\n\t        }\n\t\n\t        if (hasNone ||\n\t            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n\t            (hasPanX && direction & DIRECTION_VERTICAL)) {\n\t            return this.preventSrc(srcEvent);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n\t     * @param {Object} srcEvent\n\t     */\n\t    preventSrc: function(srcEvent) {\n\t        this.manager.session.prevented = true;\n\t        srcEvent.preventDefault();\n\t    }\n\t};\n\t\n\t/**\n\t * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n\t * @param {String} actions\n\t * @returns {*}\n\t */\n\tfunction cleanTouchActions(actions) {\n\t    // none\n\t    if (inStr(actions, TOUCH_ACTION_NONE)) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\t    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\t\n\t    // if both pan-x and pan-y are set (different recognizers\n\t    // for different directions, e.g. horizontal pan but vertical swipe?)\n\t    // we need none (as otherwise with pan-x pan-y combined none of these\n\t    // recognizers will work, since the browser would handle all panning\n\t    if (hasPanX && hasPanY) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    // pan-x OR pan-y\n\t    if (hasPanX || hasPanY) {\n\t        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n\t    }\n\t\n\t    // manipulation\n\t    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n\t        return TOUCH_ACTION_MANIPULATION;\n\t    }\n\t\n\t    return TOUCH_ACTION_AUTO;\n\t}\n\t\n\tfunction getTouchActionProps() {\n\t    if (!NATIVE_TOUCH_ACTION) {\n\t        return false;\n\t    }\n\t    var touchMap = {};\n\t    var cssSupports = window.CSS && window.CSS.supports;\n\t    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\t\n\t        // If css.supports is not supported but there is native touch-action assume it supports\n\t        // all values. This is the case for IE 10 and 11.\n\t        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n\t    });\n\t    return touchMap;\n\t}\n\t\n\t/**\n\t * Recognizer flow explained; *\n\t * All recognizers have the initial state of POSSIBLE when a input session starts.\n\t * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n\t * Example session for mouse-input: mousedown -> mousemove -> mouseup\n\t *\n\t * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n\t * which determines with state it should be.\n\t *\n\t * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n\t * POSSIBLE to give it another change on the next cycle.\n\t *\n\t *               Possible\n\t *                  |\n\t *            +-----+---------------+\n\t *            |                     |\n\t *      +-----+-----+               |\n\t *      |           |               |\n\t *   Failed      Cancelled          |\n\t *                          +-------+------+\n\t *                          |              |\n\t *                      Recognized       Began\n\t *                                         |\n\t *                                      Changed\n\t *                                         |\n\t *                                  Ended/Recognized\n\t */\n\tvar STATE_POSSIBLE = 1;\n\tvar STATE_BEGAN = 2;\n\tvar STATE_CHANGED = 4;\n\tvar STATE_ENDED = 8;\n\tvar STATE_RECOGNIZED = STATE_ENDED;\n\tvar STATE_CANCELLED = 16;\n\tvar STATE_FAILED = 32;\n\t\n\t/**\n\t * Recognizer\n\t * Every recognizer needs to extend from this class.\n\t * @constructor\n\t * @param {Object} options\n\t */\n\tfunction Recognizer(options) {\n\t    this.options = assign({}, this.defaults, options || {});\n\t\n\t    this.id = uniqueId();\n\t\n\t    this.manager = null;\n\t\n\t    // default is enable true\n\t    this.options.enable = ifUndefined(this.options.enable, true);\n\t\n\t    this.state = STATE_POSSIBLE;\n\t\n\t    this.simultaneous = {};\n\t    this.requireFail = [];\n\t}\n\t\n\tRecognizer.prototype = {\n\t    /**\n\t     * @virtual\n\t     * @type {Object}\n\t     */\n\t    defaults: {},\n\t\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @return {Recognizer}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // also update the touchAction, in case something changed about the directions/enabled state\n\t        this.manager && this.manager.touchAction.update();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognize simultaneous with an other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    recognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        var simultaneous = this.simultaneous;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (!simultaneous[otherRecognizer.id]) {\n\t            simultaneous[otherRecognizer.id] = otherRecognizer;\n\t            otherRecognizer.recognizeWith(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRecognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        delete this.simultaneous[otherRecognizer.id];\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognizer can only run when an other is failing\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    requireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        var requireFail = this.requireFail;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (inArray(requireFail, otherRecognizer) === -1) {\n\t            requireFail.push(otherRecognizer);\n\t            otherRecognizer.requireFailure(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the requireFailure link. it does not remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRequireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        var index = inArray(this.requireFail, otherRecognizer);\n\t        if (index > -1) {\n\t            this.requireFail.splice(index, 1);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * has require failures boolean\n\t     * @returns {boolean}\n\t     */\n\t    hasRequireFailures: function() {\n\t        return this.requireFail.length > 0;\n\t    },\n\t\n\t    /**\n\t     * if the recognizer can recognize simultaneous with an other recognizer\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Boolean}\n\t     */\n\t    canRecognizeWith: function(otherRecognizer) {\n\t        return !!this.simultaneous[otherRecognizer.id];\n\t    },\n\t\n\t    /**\n\t     * You should use `tryEmit` instead of `emit` directly to check\n\t     * that all the needed recognizers has failed before emitting.\n\t     * @param {Object} input\n\t     */\n\t    emit: function(input) {\n\t        var self = this;\n\t        var state = this.state;\n\t\n\t        function emit(event) {\n\t            self.manager.emit(event, input);\n\t        }\n\t\n\t        // 'panstart' and 'panmove'\n\t        if (state < STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t\n\t        emit(self.options.event); // simple 'eventName' events\n\t\n\t        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n\t            emit(input.additionalEvent);\n\t        }\n\t\n\t        // panend and pancancel\n\t        if (state >= STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Check that all the require failure recognizers has failed,\n\t     * if true, it emits a gesture event,\n\t     * otherwise, setup the state to FAILED.\n\t     * @param {Object} input\n\t     */\n\t    tryEmit: function(input) {\n\t        if (this.canEmit()) {\n\t            return this.emit(input);\n\t        }\n\t        // it's failing anyway\n\t        this.state = STATE_FAILED;\n\t    },\n\t\n\t    /**\n\t     * can we emit?\n\t     * @returns {boolean}\n\t     */\n\t    canEmit: function() {\n\t        var i = 0;\n\t        while (i < this.requireFail.length) {\n\t            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n\t                return false;\n\t            }\n\t            i++;\n\t        }\n\t        return true;\n\t    },\n\t\n\t    /**\n\t     * update the recognizer\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        // make a new copy of the inputData\n\t        // so we can change the inputData without messing up the other recognizers\n\t        var inputDataClone = assign({}, inputData);\n\t\n\t        // is is enabled and allow recognizing?\n\t        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n\t            this.reset();\n\t            this.state = STATE_FAILED;\n\t            return;\n\t        }\n\t\n\t        // reset when we've reached the end\n\t        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n\t            this.state = STATE_POSSIBLE;\n\t        }\n\t\n\t        this.state = this.process(inputDataClone);\n\t\n\t        // the recognizer has recognized a gesture\n\t        // so trigger an event\n\t        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n\t            this.tryEmit(inputDataClone);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * return the state of the recognizer\n\t     * the actual recognizing happens in this method\n\t     * @virtual\n\t     * @param {Object} inputData\n\t     * @returns {Const} STATE\n\t     */\n\t    process: function(inputData) { }, // jshint ignore:line\n\t\n\t    /**\n\t     * return the preferred touch-action\n\t     * @virtual\n\t     * @returns {Array}\n\t     */\n\t    getTouchAction: function() { },\n\t\n\t    /**\n\t     * called when the gesture isn't allowed to recognize\n\t     * like when another is being recognized or it is disabled\n\t     * @virtual\n\t     */\n\t    reset: function() { }\n\t};\n\t\n\t/**\n\t * get a usable string, used as event postfix\n\t * @param {Const} state\n\t * @returns {String} state\n\t */\n\tfunction stateStr(state) {\n\t    if (state & STATE_CANCELLED) {\n\t        return 'cancel';\n\t    } else if (state & STATE_ENDED) {\n\t        return 'end';\n\t    } else if (state & STATE_CHANGED) {\n\t        return 'move';\n\t    } else if (state & STATE_BEGAN) {\n\t        return 'start';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * direction cons to string\n\t * @param {Const} direction\n\t * @returns {String}\n\t */\n\tfunction directionStr(direction) {\n\t    if (direction == DIRECTION_DOWN) {\n\t        return 'down';\n\t    } else if (direction == DIRECTION_UP) {\n\t        return 'up';\n\t    } else if (direction == DIRECTION_LEFT) {\n\t        return 'left';\n\t    } else if (direction == DIRECTION_RIGHT) {\n\t        return 'right';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * get a recognizer by name if it is bound to a manager\n\t * @param {Recognizer|String} otherRecognizer\n\t * @param {Recognizer} recognizer\n\t * @returns {Recognizer}\n\t */\n\tfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n\t    var manager = recognizer.manager;\n\t    if (manager) {\n\t        return manager.get(otherRecognizer);\n\t    }\n\t    return otherRecognizer;\n\t}\n\t\n\t/**\n\t * This recognizer is just used as a base for the simple attribute recognizers.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction AttrRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(AttrRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof AttrRecognizer\n\t     */\n\t    defaults: {\n\t        /**\n\t         * @type {Number}\n\t         * @default 1\n\t         */\n\t        pointers: 1\n\t    },\n\t\n\t    /**\n\t     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {Boolean} recognized\n\t     */\n\t    attrTest: function(input) {\n\t        var optionPointers = this.options.pointers;\n\t        return optionPointers === 0 || input.pointers.length === optionPointers;\n\t    },\n\t\n\t    /**\n\t     * Process the input and return the state for the recognizer\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {*} State\n\t     */\n\t    process: function(input) {\n\t        var state = this.state;\n\t        var eventType = input.eventType;\n\t\n\t        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n\t        var isValid = this.attrTest(input);\n\t\n\t        // on cancel input and we've recognized before, return STATE_CANCELLED\n\t        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n\t            return state | STATE_CANCELLED;\n\t        } else if (isRecognized || isValid) {\n\t            if (eventType & INPUT_END) {\n\t                return state | STATE_ENDED;\n\t            } else if (!(state & STATE_BEGAN)) {\n\t                return STATE_BEGAN;\n\t            }\n\t            return state | STATE_CHANGED;\n\t        }\n\t        return STATE_FAILED;\n\t    }\n\t});\n\t\n\t/**\n\t * Pan\n\t * Recognized when the pointer is down and moved in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PanRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t\n\t    this.pX = null;\n\t    this.pY = null;\n\t}\n\t\n\tinherit(PanRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PanRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pan',\n\t        threshold: 10,\n\t        pointers: 1,\n\t        direction: DIRECTION_ALL\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        var direction = this.options.direction;\n\t        var actions = [];\n\t        if (direction & DIRECTION_HORIZONTAL) {\n\t            actions.push(TOUCH_ACTION_PAN_Y);\n\t        }\n\t        if (direction & DIRECTION_VERTICAL) {\n\t            actions.push(TOUCH_ACTION_PAN_X);\n\t        }\n\t        return actions;\n\t    },\n\t\n\t    directionTest: function(input) {\n\t        var options = this.options;\n\t        var hasMoved = true;\n\t        var distance = input.distance;\n\t        var direction = input.direction;\n\t        var x = input.deltaX;\n\t        var y = input.deltaY;\n\t\n\t        // lock to axis?\n\t        if (!(direction & options.direction)) {\n\t            if (options.direction & DIRECTION_HORIZONTAL) {\n\t                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t                hasMoved = x != this.pX;\n\t                distance = Math.abs(input.deltaX);\n\t            } else {\n\t                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n\t                hasMoved = y != this.pY;\n\t                distance = Math.abs(input.deltaY);\n\t            }\n\t        }\n\t        input.direction = direction;\n\t        return hasMoved && distance > options.threshold && direction & options.direction;\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n\t            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n\t    },\n\t\n\t    emit: function(input) {\n\t\n\t        this.pX = input.deltaX;\n\t        this.pY = input.deltaY;\n\t\n\t        var direction = directionStr(input.direction);\n\t\n\t        if (direction) {\n\t            input.additionalEvent = this.options.event + direction;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Pinch\n\t * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PinchRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(PinchRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pinch',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (input.scale !== 1) {\n\t            var inOut = input.scale < 1 ? 'in' : 'out';\n\t            input.additionalEvent = this.options.event + inOut;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Press\n\t * Recognized when the pointer is down for x ms without any movement.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction PressRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t}\n\t\n\tinherit(PressRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PressRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'press',\n\t        pointers: 1,\n\t        time: 251, // minimal time of the pointer to be pressed\n\t        threshold: 9 // a minimal movement is ok, but keep it low\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_AUTO];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTime = input.deltaTime > options.time;\n\t\n\t        this._input = input;\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n\t            this.reset();\n\t        } else if (input.eventType & INPUT_START) {\n\t            this.reset();\n\t            this._timer = setTimeoutContext(function() {\n\t                this.state = STATE_RECOGNIZED;\n\t                this.tryEmit();\n\t            }, options.time, this);\n\t        } else if (input.eventType & INPUT_END) {\n\t            return STATE_RECOGNIZED;\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (this.state !== STATE_RECOGNIZED) {\n\t            return;\n\t        }\n\t\n\t        if (input && (input.eventType & INPUT_END)) {\n\t            this.manager.emit(this.options.event + 'up', input);\n\t        } else {\n\t            this._input.timeStamp = now();\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Rotate\n\t * Recognized when two or more pointer are moving in a circular motion.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction RotateRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(RotateRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof RotateRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'rotate',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n\t    }\n\t});\n\t\n\t/**\n\t * Swipe\n\t * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction SwipeRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(SwipeRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof SwipeRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'swipe',\n\t        threshold: 10,\n\t        velocity: 0.3,\n\t        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n\t        pointers: 1\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return PanRecognizer.prototype.getTouchAction.call(this);\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        var direction = this.options.direction;\n\t        var velocity;\n\t\n\t        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n\t            velocity = input.overallVelocity;\n\t        } else if (direction & DIRECTION_HORIZONTAL) {\n\t            velocity = input.overallVelocityX;\n\t        } else if (direction & DIRECTION_VERTICAL) {\n\t            velocity = input.overallVelocityY;\n\t        }\n\t\n\t        return this._super.attrTest.call(this, input) &&\n\t            direction & input.offsetDirection &&\n\t            input.distance > this.options.threshold &&\n\t            input.maxPointers == this.options.pointers &&\n\t            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n\t    },\n\t\n\t    emit: function(input) {\n\t        var direction = directionStr(input.offsetDirection);\n\t        if (direction) {\n\t            this.manager.emit(this.options.event + direction, input);\n\t        }\n\t\n\t        this.manager.emit(this.options.event, input);\n\t    }\n\t});\n\t\n\t/**\n\t * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n\t * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n\t * a single tap.\n\t *\n\t * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n\t * multi-taps being recognized.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction TapRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    // previous time and center,\n\t    // used for tap counting\n\t    this.pTime = false;\n\t    this.pCenter = false;\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t    this.count = 0;\n\t}\n\t\n\tinherit(TapRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'tap',\n\t        pointers: 1,\n\t        taps: 1,\n\t        interval: 300, // max time between the multi-tap taps\n\t        time: 250, // max time of the pointer to be down (like finger on the screen)\n\t        threshold: 9, // a minimal movement is ok, but keep it low\n\t        posThreshold: 10 // a multi-tap can be a bit off the initial position\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_MANIPULATION];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTouchTime = input.deltaTime < options.time;\n\t\n\t        this.reset();\n\t\n\t        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n\t            return this.failTimeout();\n\t        }\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (validMovement && validTouchTime && validPointers) {\n\t            if (input.eventType != INPUT_END) {\n\t                return this.failTimeout();\n\t            }\n\t\n\t            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n\t            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\t\n\t            this.pTime = input.timeStamp;\n\t            this.pCenter = input.center;\n\t\n\t            if (!validMultiTap || !validInterval) {\n\t                this.count = 1;\n\t            } else {\n\t                this.count += 1;\n\t            }\n\t\n\t            this._input = input;\n\t\n\t            // if tap count matches we have recognized it,\n\t            // else it has began recognizing...\n\t            var tapCount = this.count % options.taps;\n\t            if (tapCount === 0) {\n\t                // no failing requirements, immediately trigger the tap event\n\t                // or wait as long as the multitap interval to trigger\n\t                if (!this.hasRequireFailures()) {\n\t                    return STATE_RECOGNIZED;\n\t                } else {\n\t                    this._timer = setTimeoutContext(function() {\n\t                        this.state = STATE_RECOGNIZED;\n\t                        this.tryEmit();\n\t                    }, options.interval, this);\n\t                    return STATE_BEGAN;\n\t                }\n\t            }\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    failTimeout: function() {\n\t        this._timer = setTimeoutContext(function() {\n\t            this.state = STATE_FAILED;\n\t        }, this.options.interval, this);\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function() {\n\t        if (this.state == STATE_RECOGNIZED) {\n\t            this._input.tapCount = this.count;\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Simple way to create a manager with a default set of recognizers.\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Hammer(element, options) {\n\t    options = options || {};\n\t    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n\t    return new Manager(element, options);\n\t}\n\t\n\t/**\n\t * @const {string}\n\t */\n\tHammer.VERSION = '2.0.7';\n\t\n\t/**\n\t * default settings\n\t * @namespace\n\t */\n\tHammer.defaults = {\n\t    /**\n\t     * set if DOM events are being triggered.\n\t     * But this is slower and unused by simple implementations, so disabled by default.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\t    domEvents: false,\n\t\n\t    /**\n\t     * The value for the touchAction property/fallback.\n\t     * When set to `compute` it will magically set the correct value based on the added recognizers.\n\t     * @type {String}\n\t     * @default compute\n\t     */\n\t    touchAction: TOUCH_ACTION_COMPUTE,\n\t\n\t    /**\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\t    enable: true,\n\t\n\t    /**\n\t     * EXPERIMENTAL FEATURE -- can be removed/changed\n\t     * Change the parent input target element.\n\t     * If Null, then it is being set the to main element.\n\t     * @type {Null|EventTarget}\n\t     * @default null\n\t     */\n\t    inputTarget: null,\n\t\n\t    /**\n\t     * force an input class\n\t     * @type {Null|Function}\n\t     * @default null\n\t     */\n\t    inputClass: null,\n\t\n\t    /**\n\t     * Default recognizer setup when calling `Hammer()`\n\t     * When creating a new Manager these will be skipped.\n\t     * @type {Array}\n\t     */\n\t    preset: [\n\t        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n\t        [RotateRecognizer, {enable: false}],\n\t        [PinchRecognizer, {enable: false}, ['rotate']],\n\t        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n\t        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n\t        [TapRecognizer],\n\t        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n\t        [PressRecognizer]\n\t    ],\n\t\n\t    /**\n\t     * Some CSS properties can be used to improve the working of Hammer.\n\t     * Add them to this method and they will be set when creating a new Manager.\n\t     * @namespace\n\t     */\n\t    cssProps: {\n\t        /**\n\t         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userSelect: 'none',\n\t\n\t        /**\n\t         * Disable the Windows Phone grippers when pressing an element.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchSelect: 'none',\n\t\n\t        /**\n\t         * Disables the default callout shown when you touch and hold a touch target.\n\t         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n\t         * a callout containing information about the link. This property allows you to disable that callout.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchCallout: 'none',\n\t\n\t        /**\n\t         * Specifies whether zooming is enabled. Used by IE10>\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        contentZooming: 'none',\n\t\n\t        /**\n\t         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userDrag: 'none',\n\t\n\t        /**\n\t         * Overrides the highlight color shown when the user taps a link or a JavaScript\n\t         * clickable element in iOS. This property obeys the alpha value, if specified.\n\t         * @type {String}\n\t         * @default 'rgba(0,0,0,0)'\n\t         */\n\t        tapHighlightColor: 'rgba(0,0,0,0)'\n\t    }\n\t};\n\t\n\tvar STOP = 1;\n\tvar FORCED_STOP = 2;\n\t\n\t/**\n\t * Manager\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Manager(element, options) {\n\t    this.options = assign({}, Hammer.defaults, options || {});\n\t\n\t    this.options.inputTarget = this.options.inputTarget || element;\n\t\n\t    this.handlers = {};\n\t    this.session = {};\n\t    this.recognizers = [];\n\t    this.oldCssProps = {};\n\t\n\t    this.element = element;\n\t    this.input = createInputInstance(this);\n\t    this.touchAction = new TouchAction(this, this.options.touchAction);\n\t\n\t    toggleCssProps(this, true);\n\t\n\t    each(this.options.recognizers, function(item) {\n\t        var recognizer = this.add(new (item[0])(item[1]));\n\t        item[2] && recognizer.recognizeWith(item[2]);\n\t        item[3] && recognizer.requireFailure(item[3]);\n\t    }, this);\n\t}\n\t\n\tManager.prototype = {\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @returns {Manager}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // Options that need a little more setup\n\t        if (options.touchAction) {\n\t            this.touchAction.update();\n\t        }\n\t        if (options.inputTarget) {\n\t            // Clean up existing event listeners and reinitialize\n\t            this.input.destroy();\n\t            this.input.target = options.inputTarget;\n\t            this.input.init();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * stop recognizing for this session.\n\t     * This session will be discarded, when a new [input]start event is fired.\n\t     * When forced, the recognizer cycle is stopped immediately.\n\t     * @param {Boolean} [force]\n\t     */\n\t    stop: function(force) {\n\t        this.session.stopped = force ? FORCED_STOP : STOP;\n\t    },\n\t\n\t    /**\n\t     * run the recognizers!\n\t     * called by the inputHandler function on every movement of the pointers (touches)\n\t     * it walks through all the recognizers and tries to detect the gesture that is being made\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        var session = this.session;\n\t        if (session.stopped) {\n\t            return;\n\t        }\n\t\n\t        // run the touch-action polyfill\n\t        this.touchAction.preventDefaults(inputData);\n\t\n\t        var recognizer;\n\t        var recognizers = this.recognizers;\n\t\n\t        // this holds the recognizer that is being recognized.\n\t        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n\t        // if no recognizer is detecting a thing, it is set to `null`\n\t        var curRecognizer = session.curRecognizer;\n\t\n\t        // reset when the last recognizer is recognized\n\t        // or when we're in a new session\n\t        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n\t            curRecognizer = session.curRecognizer = null;\n\t        }\n\t\n\t        var i = 0;\n\t        while (i < recognizers.length) {\n\t            recognizer = recognizers[i];\n\t\n\t            // find out if we are allowed try to recognize the input for this one.\n\t            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n\t            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n\t            //      that is being recognized.\n\t            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n\t            //      this can be setup with the `recognizeWith()` method on the recognizer.\n\t            if (session.stopped !== FORCED_STOP && ( // 1\n\t                    !curRecognizer || recognizer == curRecognizer || // 2\n\t                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n\t                recognizer.recognize(inputData);\n\t            } else {\n\t                recognizer.reset();\n\t            }\n\t\n\t            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n\t            // current active recognizer. but only if we don't already have an active recognizer\n\t            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n\t                curRecognizer = session.curRecognizer = recognizer;\n\t            }\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * get a recognizer by its event name.\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Recognizer|Null}\n\t     */\n\t    get: function(recognizer) {\n\t        if (recognizer instanceof Recognizer) {\n\t            return recognizer;\n\t        }\n\t\n\t        var recognizers = this.recognizers;\n\t        for (var i = 0; i < recognizers.length; i++) {\n\t            if (recognizers[i].options.event == recognizer) {\n\t                return recognizers[i];\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t\n\t    /**\n\t     * add a recognizer to the manager\n\t     * existing recognizers with the same event name will be removed\n\t     * @param {Recognizer} recognizer\n\t     * @returns {Recognizer|Manager}\n\t     */\n\t    add: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'add', this)) {\n\t            return this;\n\t        }\n\t\n\t        // remove existing\n\t        var existing = this.get(recognizer.options.event);\n\t        if (existing) {\n\t            this.remove(existing);\n\t        }\n\t\n\t        this.recognizers.push(recognizer);\n\t        recognizer.manager = this;\n\t\n\t        this.touchAction.update();\n\t        return recognizer;\n\t    },\n\t\n\t    /**\n\t     * remove a recognizer by name or instance\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Manager}\n\t     */\n\t    remove: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'remove', this)) {\n\t            return this;\n\t        }\n\t\n\t        recognizer = this.get(recognizer);\n\t\n\t        // let's make sure this recognizer exists\n\t        if (recognizer) {\n\t            var recognizers = this.recognizers;\n\t            var index = inArray(recognizers, recognizer);\n\t\n\t            if (index !== -1) {\n\t                recognizers.splice(index, 1);\n\t                this.touchAction.update();\n\t            }\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * bind event\n\t     * @param {String} events\n\t     * @param {Function} handler\n\t     * @returns {EventEmitter} this\n\t     */\n\t    on: function(events, handler) {\n\t        if (events === undefined) {\n\t            return;\n\t        }\n\t        if (handler === undefined) {\n\t            return;\n\t        }\n\t\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            handlers[event] = handlers[event] || [];\n\t            handlers[event].push(handler);\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * unbind event, leave emit blank to remove all handlers\n\t     * @param {String} events\n\t     * @param {Function} [handler]\n\t     * @returns {EventEmitter} this\n\t     */\n\t    off: function(events, handler) {\n\t        if (events === undefined) {\n\t            return;\n\t        }\n\t\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            if (!handler) {\n\t                delete handlers[event];\n\t            } else {\n\t                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * emit event to the listeners\n\t     * @param {String} event\n\t     * @param {Object} data\n\t     */\n\t    emit: function(event, data) {\n\t        // we also want to trigger dom events\n\t        if (this.options.domEvents) {\n\t            triggerDomEvent(event, data);\n\t        }\n\t\n\t        // no handlers, so skip it all\n\t        var handlers = this.handlers[event] && this.handlers[event].slice();\n\t        if (!handlers || !handlers.length) {\n\t            return;\n\t        }\n\t\n\t        data.type = event;\n\t        data.preventDefault = function() {\n\t            data.srcEvent.preventDefault();\n\t        };\n\t\n\t        var i = 0;\n\t        while (i < handlers.length) {\n\t            handlers[i](data);\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * destroy the manager and unbinds all events\n\t     * it doesn't unbind dom events, that is the user own responsibility\n\t     */\n\t    destroy: function() {\n\t        this.element && toggleCssProps(this, false);\n\t\n\t        this.handlers = {};\n\t        this.session = {};\n\t        this.input.destroy();\n\t        this.element = null;\n\t    }\n\t};\n\t\n\t/**\n\t * add/remove the css properties as defined in manager.options.cssProps\n\t * @param {Manager} manager\n\t * @param {Boolean} add\n\t */\n\tfunction toggleCssProps(manager, add) {\n\t    var element = manager.element;\n\t    if (!element.style) {\n\t        return;\n\t    }\n\t    var prop;\n\t    each(manager.options.cssProps, function(value, name) {\n\t        prop = prefixed(element.style, name);\n\t        if (add) {\n\t            manager.oldCssProps[prop] = element.style[prop];\n\t            element.style[prop] = value;\n\t        } else {\n\t            element.style[prop] = manager.oldCssProps[prop] || '';\n\t        }\n\t    });\n\t    if (!add) {\n\t        manager.oldCssProps = {};\n\t    }\n\t}\n\t\n\t/**\n\t * trigger dom event\n\t * @param {String} event\n\t * @param {Object} data\n\t */\n\tfunction triggerDomEvent(event, data) {\n\t    var gestureEvent = document.createEvent('Event');\n\t    gestureEvent.initEvent(event, true, true);\n\t    gestureEvent.gesture = data;\n\t    data.target.dispatchEvent(gestureEvent);\n\t}\n\t\n\tassign(Hammer, {\n\t    INPUT_START: INPUT_START,\n\t    INPUT_MOVE: INPUT_MOVE,\n\t    INPUT_END: INPUT_END,\n\t    INPUT_CANCEL: INPUT_CANCEL,\n\t\n\t    STATE_POSSIBLE: STATE_POSSIBLE,\n\t    STATE_BEGAN: STATE_BEGAN,\n\t    STATE_CHANGED: STATE_CHANGED,\n\t    STATE_ENDED: STATE_ENDED,\n\t    STATE_RECOGNIZED: STATE_RECOGNIZED,\n\t    STATE_CANCELLED: STATE_CANCELLED,\n\t    STATE_FAILED: STATE_FAILED,\n\t\n\t    DIRECTION_NONE: DIRECTION_NONE,\n\t    DIRECTION_LEFT: DIRECTION_LEFT,\n\t    DIRECTION_RIGHT: DIRECTION_RIGHT,\n\t    DIRECTION_UP: DIRECTION_UP,\n\t    DIRECTION_DOWN: DIRECTION_DOWN,\n\t    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n\t    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n\t    DIRECTION_ALL: DIRECTION_ALL,\n\t\n\t    Manager: Manager,\n\t    Input: Input,\n\t    TouchAction: TouchAction,\n\t\n\t    TouchInput: TouchInput,\n\t    MouseInput: MouseInput,\n\t    PointerEventInput: PointerEventInput,\n\t    TouchMouseInput: TouchMouseInput,\n\t    SingleTouchInput: SingleTouchInput,\n\t\n\t    Recognizer: Recognizer,\n\t    AttrRecognizer: AttrRecognizer,\n\t    Tap: TapRecognizer,\n\t    Pan: PanRecognizer,\n\t    Swipe: SwipeRecognizer,\n\t    Pinch: PinchRecognizer,\n\t    Rotate: RotateRecognizer,\n\t    Press: PressRecognizer,\n\t\n\t    on: addEventListeners,\n\t    off: removeEventListeners,\n\t    each: each,\n\t    merge: merge,\n\t    extend: extend,\n\t    assign: assign,\n\t    inherit: inherit,\n\t    bindFn: bindFn,\n\t    prefixed: prefixed\n\t});\n\t\n\t// this prevents errors when Hammer is loaded in the presence of an AMD\n\t//  style loader but by script tag, not by the loader.\n\tvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\n\tfreeGlobal.Hammer = Hammer;\n\t\n\tif (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t        return Hammer;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t    module.exports = Hammer;\n\t} else {\n\t    window[exportName] = Hammer;\n\t}\n\t\n\t})(window, document, 'Hammer');\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<headerbar class=\\\"white fz-m\\\" :lefticonname=lefticonname :handlerlefticon=actionback>{{apptitle}}</headerbar> <loading :show=authenticating :loadersize=loadersize :top=loadertop></loading> <div class=warp> <div class=\\\"maincontent pdt1 pr\\\"> <buttonbar v-touch:tap=handlerToAbout class=\\\"icon-right al-l mgb1\\\" setstyle=b iconfixedright=true> 一键预约 </buttonbar> <buttonbar v-touch:tap=handlerLoadingtest class=\\\"icon-stopwatch al-l mgb1\\\" setstyle=b iconfixedright=true> 模拟加载 </buttonbar> <buttonbar v-touch:tap=handlerLoadingtest class=\\\"icon-attention-alt al-l mgb1\\\" setstyle=b iconfixedright=true> 模拟弹出窗口 </buttonbar> <router-view class=view transition=test transition-mode=out-in keep-alive></router-view> </div> <p>&nbsp;</p> </div>\";\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <h2>ABOUT US...</h2> <a v-link=\\\"{ path: '/about/about_me' }\\\">aboutMe{{message}}</a> <p>{{val}}</p> <br/><br/> <router-view class=view transition=test transition-mode=out-in keep-alive></router-view> </div>\";\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>archive with id: {{$route.params.messageId}}</div>\";\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <h2>inbox! {{message.text}}</h2> <router-view></router-view> </div>\";\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <div v-if=$loadingRouteData>Loading data...</div> <div v-if=!$loadingRouteData>message #{{message.id}}: {{message.text}}</div> </div>\";\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<p>FOUR OH FOUR</p>\";\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<button v-bind:class=\\\"{\\n  mainbtn:big,\\n  smallbtn:small,\\n  disable:disable,\\n  iconfl:iconfixedleft,\\n  iconfr:iconfixedright,\\n  pr:true,\\n  style_a:stylea,\\n  style_b:styleb\\n}\\\"> <slot> </slot></button>\";\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"headerbar al-c lh-ll bgcyan pa pr\\\"> <span class=\\\"{{lefticonname}} {{lefticon?'show':'hide'}} tapBox leftTap\\\" v-touch:tap=handlerlefticon> </span> <span class=\\\"{{righticonname}} {{righticon?'show':'hide'}} tapBox rightTap\\\" v-touch:tap=handlerrighticon> </span> <slot> </slot></div>\";\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div v-show=show class=loadingbox> <div class=loading v-bind:style=\\\"{\\n      top:top+'rem',\\n      backgroundSize:loadersize+'rem'\\n    }\\\"> </div> </div>\";\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <h2>User yo</h2> <router-view></router-view> </div>\";\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<h3>user posts</h3>\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <h3>user profile</h3> <p>{{$route.params.userId}} {{$route.params.something}}</p> </div>\";\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>user settings</div>\";\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=test _v-f2dda50e=\\\"\\\"> <h3 _v-f2dda50e=\\\"\\\">this is about me!</h3> </div>\";\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(12)\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(19)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(20)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(16)\n\t__vue_template__ = __webpack_require__(32)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(21)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(22)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(7)\n\t__vue_template__ = __webpack_require__(23)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(24)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(13)\n\t__vue_script__ = __webpack_require__(8)\n\t__vue_template__ = __webpack_require__(25)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(14)\n\t__vue_script__ = __webpack_require__(9)\n\t__vue_template__ = __webpack_require__(26)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(15)\n\t__vue_script__ = __webpack_require__(10)\n\t__vue_template__ = __webpack_require__(27)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(28)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(29)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(30)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(31)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var vueTouch = {}\n\t  var Hammer =  true\n\t    ? __webpack_require__(17)\n\t    : window.Hammer\n\t  var gestures = ['tap', 'pan', 'pinch', 'press', 'rotate', 'swipe']\n\t  var directions = ['up', 'down', 'left', 'right', 'horizontal', 'vertical', 'all']\n\t  var customEvents = {}\n\t\n\t  if (!Hammer) {\n\t    throw new Error('[vue-touch] cannot locate Hammer.js.')\n\t  }\n\t\n\t  // exposed global options\n\t  vueTouch.config = {}\n\t\n\t  vueTouch.install = function (Vue) {\n\t\n\t    Vue.directive('touch', {\n\t\n\t      isFn: true,\n\t      acceptStatement: true,\n\t      priority: Vue.directive('on').priority,\n\t\n\t      bind: function () {\n\t        if (!this.el.hammer) {\n\t          this.el.hammer = new Hammer.Manager(this.el)\n\t        }\n\t        var mc = this.mc = this.el.hammer\n\t        // determine event type\n\t        var event = this.arg\n\t        if (!event) {\n\t          console.warn('[vue-touch] event type argument is required.')\n\t        }\n\t        var recognizerType, recognizer\n\t\n\t        if (customEvents[event]) {\n\t          // custom event\n\t          var custom = customEvents[event]\n\t          recognizerType = custom.type\n\t          recognizer = new Hammer[capitalize(recognizerType)](custom)\n\t          recognizer.recognizeWith(mc.recognizers)\n\t          mc.add(recognizer)\n\t        } else {\n\t          // built-in event\n\t          for (var i = 0; i < gestures.length; i++) {\n\t            if (event.indexOf(gestures[i]) === 0) {\n\t              recognizerType = gestures[i]\n\t              break\n\t            }\n\t          }\n\t          if (!recognizerType) {\n\t            console.warn('[vue-touch] invalid event type: ' + event)\n\t            return\n\t          }\n\t          recognizer = mc.get(recognizerType)\n\t          if (!recognizer) {\n\t            // add recognizer\n\t            recognizer = new Hammer[capitalize(recognizerType)]()\n\t            // make sure multiple recognizers work together...\n\t            recognizer.recognizeWith(mc.recognizers)\n\t            mc.add(recognizer)\n\t          }\n\t          // apply global options\n\t          var globalOptions = vueTouch.config[recognizerType]\n\t          if (globalOptions) {\n\t            guardDirections(globalOptions)\n\t            recognizer.set(globalOptions)\n\t          }\n\t          // apply local options\n\t          var localOptions =\n\t            this.el.hammerOptions &&\n\t            this.el.hammerOptions[recognizerType]\n\t          if (localOptions) {\n\t            guardDirections(localOptions)\n\t            recognizer.set(localOptions)\n\t          }\n\t        }\n\t        this.recognizer = recognizer\n\t      },\n\t\n\t      update: function (fn) {\n\t        var mc = this.mc\n\t        var event = this.arg\n\t        // teardown old handler\n\t        if (this.handler) {\n\t          mc.off(event, this.handler)\n\t        }\n\t        if (typeof fn !== 'function') {\n\t          this.handler = null\n\t          console.warn(\n\t            '[vue-touch] invalid handler function for v-touch: ' +\n\t            this.arg + '=\"' + this.descriptor.raw\n\t          )\n\t        } else {\n\t          mc.on(event, (this.handler = fn))\n\t        }\n\t      },\n\t\n\t      unbind: function () {\n\t        if (this.handler) {\n\t          this.mc.off(this.arg, this.handler)\n\t        }\n\t        if (!Object.keys(this.mc.handlers).length) {\n\t          this.mc.destroy()\n\t          this.el.hammer = null\n\t        }\n\t      }\n\t    })\n\t\n\t    Vue.directive('touch-options', {\n\t      priority: Vue.directive('on').priority + 1,\n\t      update: function (options) {\n\t        var opts = this.el.hammerOptions || (this.el.hammerOptions = {})\n\t        if (!this.arg) {\n\t          console.warn('[vue-touch] recognizer type argument for v-touch-options is required.')\n\t        } else {\n\t          opts[this.arg] = options\n\t        }\n\t      }\n\t    })\n\t  }\n\t\n\t  /**\n\t   * Register a custom event.\n\t   *\n\t   * @param {String} event\n\t   * @param {Object} options - a Hammer.js recognizer option object.\n\t   *                           required fields:\n\t   *                           - type: the base recognizer to use for this event\n\t   */\n\t\n\t  vueTouch.registerCustomEvent = function (event, options) {\n\t    options.event = event\n\t    customEvents[event] = options\n\t  }\n\t\n\t  function capitalize (str) {\n\t    return str.charAt(0).toUpperCase() + str.slice(1)\n\t  }\n\t\n\t  function guardDirections (options) {\n\t    var dir = options.direction\n\t    if (typeof dir === 'string') {\n\t      var hammerDirection = 'DIRECTION_' + dir.toUpperCase()\n\t      if (directions.indexOf(dir) > -1 && Hammer.hasOwnProperty(hammerDirection)) {\n\t        options.direction = Hammer[hammerDirection]\n\t      } else {\n\t        console.warn('[vue-touch] invalid direction: ' + dir)\n\t      }\n\t    }\n\t  }\n\t\n\t  if (true) {\n\t    module.exports = vueTouch\n\t  } else if (typeof define == \"function\" && define.amd) {\n\t    define([], function(){ return vueTouch })\n\t  } else if (window.Vue) {\n\t    window.VueTouch = vueTouch\n\t    Vue.use(vueTouch)\n\t  }\n\t\n\t})()\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.22\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  queue.length = 0;\n\t  runBatcherQueue(userQueue);\n\t  // user watchers triggered more internal watchers\n\t  if (queue.length) {\n\t    runBatcherQueue(queue);\n\t  }\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.22';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/app.3f6ba7e1d9140ef70233.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e6f3f95c1e40a1fb683e\n **/","import Vue from 'vue'\nimport App from './App'\nimport VueRouter from 'vue-router'\nimport { configRouter } from './route-config'\nimport VueTouch from 'vue-touch'\nVue.use(VueTouch)\nrequire('es6-promise').polyfill()\n\n// install router\nVue.use(VueRouter)\n\n// create router\nconst router = new VueRouter({\n  history: true,\n  saveScrollPosition: true\n})\n\n// configure router\nconfigRouter(router)\n\n// boostrap the app\nrouter.start(App, 'body')\n\n// just for debugging\nwindow.router = router\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","// Attempt to convert a string value to a Boolean. Otherwise, return the value\n// without modification so Vue can throw a warning.\nexport default (val) => (\n  typeof val !== 'string' ? val\n  : val === 'true' ? true\n  : val === 'false' ? false\n  : val === 'null' ? false\n  : val === 'undefined' ? false : val\n)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/utils/coerceBoolean.js\n **/","export function configRouter (router) {\n  // normal routes\n  router.map({\n    // basic example\n    '/about': {\n      // the component can also be a plain string component id,\n      // but a component with that id must be available in the\n      // App component's scope.\n      component: require('./components/about/about.vue'),\n      subRoutes: {\n        'about_me': {\n          component: require('./components/about/about_me.vue'),\n          about_me: true\n        }\n      }\n    },\n\n    // nested example\n    '/user/:userId': {\n      component: require('./components/user/index.vue'),\n      subRoutes: {\n        '/': {\n          component: {\n            template: '<p>特特</p>'\n          }\n        },\n        // matches \"/user/:userId/profile/:something\"\n        'profile/:something': {\n          component: require('./components/user/profile.vue')\n        },\n        // matches \"/user/:userId/posts\"\n        'posts': {\n          component: require('./components/user/posts.vue')\n        },\n        // matches \"/user/:userId/settings\"\n        'settings': {\n          component: require('./components/user/settings.vue')\n        }\n      }\n    },\n\n    // not found handler\n    '*': {\n      component: require('./components/not-found.vue')\n    },\n\n    // advanced example\n    '/index': {\n      component: require('./components/index/index.vue'),\n      subRoutes: {\n        '/message/:messageId': {\n          component: require('./components/index/message.vue')\n        },\n        '/archived': {\n          component: require('./components/index/archive.vue')\n        },\n        // default component to render into the nested outlet\n        // when the parent route is matched but there's no\n        // nested segment. In this case, \"/index\".\n        '/': {\n          // inline component\n          component: {\n            template: 'default yo'\n          }\n        }\n      }\n    }\n  })\n\n  // redirect\n  router.redirect({\n    '/info': '/about',\n    '/hello/:userId': '/user/:userId'\n  })\n\n  // global before\n  // 3 options:\n  // 1. return a boolean\n  // 2. return a Promise that resolves to a boolean\n  // 3. call transition.next() or transition.abort()\n  router.beforeEach((transition) => {\n    if (transition.to.path === '/forbidden') {\n      router.app.authenticating = true\n      setTimeout(() => {\n        router.app.authenticating = false\n        transition.abort()\n      }, 3000)\n    } else {\n      transition.next()\n    }\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/route-config.js\n **/","// just a mock\nexport default {\n  get (params, cb) {\n    setTimeout(() => {\n      cb(null, {\n        id: params.id,\n        text: 'Hello this is a message'\n      })\n    }, 3000)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/messages.js\n **/","<style lang=\"less\">\n  @import \"less/main.less\";\n  .warp{\n    padding-top:3rem;\n  }\n  .view {\n    transition: all .5s ease;\n  }\n  .test-enter, .test-leave {\n    opacity: 0;\n    transform: translate3d(20px, 0, 0);\n  }\n  .v-link-active {\n  }\n  [v-cloak] {\n    display: none;\n  }\n</style>\n\n<template>\n  <headerbar\n  class=\"white fz-m\"\n  :lefticonname= \"lefticonname\"\n  :handlerlefticon= \"actionback\"\n  >{{apptitle}}</headerbar>\n  <loading\n    :show=\"authenticating\"\n    :loadersize=\"loadersize\"\n    :top=\"loadertop\"\n    ></loading>\n  <div class=\"warp\">\n    <div class=\"maincontent pdt1 pr\">\n      <!-- <buttonbar\n        class=\"icon-left al-l mgb1\"\n        disable=\"false\"\n        setstyle=\"a\"\n        small=\"true\"\n        iconfixedright=\"true\">\n        菜单\n      </buttonbar> -->\n      <buttonbar\n        v-touch:tap=\"handlerToAbout\"\n        class=\"icon-right al-l mgb1\"\n        setstyle=\"b\"\n        iconfixedright=\"true\">\n        一键预约\n      </buttonbar>\n      <buttonbar\n        v-touch:tap=\"handlerLoadingtest\"\n        class=\"icon-stopwatch al-l mgb1\"\n        setstyle=\"b\"\n        iconfixedright=\"true\">\n        模拟加载\n      </buttonbar>\n      <buttonbar\n        v-touch:tap=\"handlerLoadingtest\"\n        class=\"icon-attention-alt al-l mgb1\"\n        setstyle=\"b\"\n        iconfixedright=\"true\">\n        模拟弹出窗口\n      </buttonbar>\n      <!-- <a class=\"mainbtn_small_b\" v-touch:tap=\"handlerToAbout\">Tap About!</a><br>\n      <a class=\"mainbtn_small_b mgt-5\" v-touch:tap=\"handlerToIndex\">To Index!</a>\n      <a class=\"mainbtn_small_b\" v-link=\"{ path: '/index/message/123' }\">index</a>\n      <a v-link=\"{ path: '/about' }\">about</a>\n      <a v-link=\"{ path: '/user/1234/profile/what' }\">user</a>\n      <a v-link=\"{ path: '/forbidden' }\">forbidden</a> -->\n      <router-view class=\"view\" transition=\"test\" transition-mode=\"out-in\" keep-alive></router-view>\n    </div>\n    <p>&nbsp;</p>\n\n  </div>\n</template>\n\n<script>\nimport headerbar from './components/publick/header.vue'\nimport loading from './components/publick/loading.vue'\nimport buttonbar from './components/publick/button.vue'\n\nexport default {\n  data () {\n    return {\n      authenticating: false,\n      loadertop: 3,\n      loadersize: 3,\n      lefticonname: 'icon-left-1',\n      righticonname: 'icon-th-list',\n      apptitle: '预约营养师'\n    }\n  },\n  methods: {\n    handlerToAbout () {\n      this.$route.router.go('/about')\n    },\n    handlerToIndex () {\n      this.$route.router.go('/index/message/123')\n    },\n    actionback () {\n      window.history.back()\n    },\n    handlerLoadingtest () {\n      this.$route.router.go('/forbidden')\n    }\n  },\n  replace: false,\n  components: {\n    headerbar,\n    loading,\n    buttonbar\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?d6a1f1e0\n **/","<template>\n  <div>\n    <h2>ABOUT US...</h2>\n     <a v-link=\"{ path: '/about/about_me' }\">aboutMe{{message}}</a>\n     <p>{{val}}</p>\n     <br/><br/>\n     <router-view class=\"view\" transition=\"test\" transition-mode=\"out-in\" keep-alive></router-view>\n  </div>\n</template>\n\n<script>\nmodule.exports = {\n  route: {\n    // three options:\n    // 1. return a boolean\n    // 2. return a promise that resolves to a boolean\n    // 3. explicitly call transition.next() or abort()\n    // canActivate (transition) {\n    //   if (transition.from.path === '/about') {\n    //   // alert('cannot navigate from /about to /inbox')\n    //     transition.next()\n    //   } else {\n    //     console.log('yes')\n    //     transition.next()\n    //   }\n    // },\n\n    // activate (transition) {\n    //   var promise = new Promise(\n    //     (resolve, reject) => {\n    //       resolve('test data')\n    //     }\n    //   )\n    //   return promise\n    //   .then((data) => {\n    //     // console.log('111', transition)\n    //     transition.redirect('/about')\n    //   })\n    //   .catch(() => {\n    //     console.log('禁止跳转')\n    //     // transition.redirect('/user/1234')\n    //   })\n    //   // transition.redirect('/user/1234/profile/what')\n    // },\n    data (transition) {\n      setTimeout(function () {\n        transition.next({\n          message: '改变了message数据',\n          val: 'val!'\n        })\n      }, 2000)\n    }\n  },\n\n  data () {\n    return {\n      message: '111111',\n      val: 'this is val!'\n    }\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** about.vue?e7bb9a9a\n **/","<template>\n  <div>\n    <h2>inbox! {{message.text}}</h2>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nmodule.exports = {\n  route: {\n\n  },\n\n  data () {\n    return {\n      message: {}\n    }\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** index.vue?f96151fa\n **/","<template>\n  <div>\n    <div v-if=\"$loadingRouteData\">Loading data...</div>\n    <div v-if=\"!$loadingRouteData\">message #{{message.id}}: {{message.text}}</div>\n  </div>\n</template>\n\n<script>\nimport messagesService from '../../services/messages'\nmodule.exports = {\n  route: {\n    // data hook\n    // Useful for doing async data loading.\n    // sets the component's \"$loading\" property to\n    // true when called, and sets it to false when resolved.\n    // two options:\n    // 1. return a promise\n    // 2. explicitly call transition.next() or\n    //     transition.abort(reason)\n    data ({ to, next }) {\n      // \"this\" is available\n      var params = {\n        id: to.params.messageId\n      }\n      console.log('to', to)\n      console.log('next', next)\n      // callback based\n      messagesService.get(params, (err, message) => {\n        if (err) {\n          // handle error, e.g. display a warning\n        } else {\n          next({\n            message: message\n          })\n        }\n      })\n\n      // or promise based (with ES6 sugar)\n      // return messagesService\n      //   .get(params)\n      //   .then(message => ({ message }))\n    }\n  },\n\n  // default state\n  data () {\n    return {\n      message: {}\n    }\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** message.vue?312a77fe\n **/","<template>\n  <button\n  v-bind:class=\"{\n    mainbtn:big,\n    smallbtn:small,\n    disable:disable,\n    iconfl:iconfixedleft,\n    iconfr:iconfixedright,\n    pr:true,\n    style_a:stylea,\n    style_b:styleb\n  }\"\n  >\n    <slot></solt>\n  </button>\n</template>\n\n<script>\nimport coerceBoolean from '../utils/coerceBoolean.js'\nexport default {\n  props: {\n    small: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: false\n    },\n    big: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: true\n    },\n    disable: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: false\n    },\n    iconfixedleft: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: false\n    },\n    iconfixedright: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: false\n    },\n    setstyle: {\n      type: String,\n      default: 'a'\n    },\n    stylea: {\n      type: Boolean,\n      default: true\n    },\n    styleb: {\n      type: Boolean,\n      default: false\n    }\n  },\n  ready () {\n    const small = this.small\n    if (small) {\n      this.big = false\n    }\n    if (this.setstyle === 'a') {\n      this.stylea = true\n      this.styleb = false\n    }\n    if (this.setstyle === 'b') {\n      this.styleb = true\n      this.stylea = false\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n//## Gray and brand colors for use across Bootstrap.\n\n//## Gray and brand colors for use across Bootstrap.\n\n@gray-base:              #000;\n@gray-darker:            lighten(@gray-base, 13.5%); // #222\n@gray-dark:              lighten(@gray-base, 20%);   // #333\n@gray:                   lighten(@gray-base, 33.5%); // #555\n@gray-light:             lighten(@gray-base, 46.7%); // #777\n@gray-lighter:           lighten(@gray-base, 93.5%); // #eee\n\n\n//==Coloured\n//\n@cyan:                      #48c5c7;\n@red:                      #e10000;\n@orange:                   #ffaf00;\n@white:                  #fff;\n@blue:                    #007bed;\n\n\n\n.cyan{color:                    @cyan; }\n.red{ color:                      #e10000;}\n.orange{ color:                   #feb028;}\n.white{ color:                  #fff;}\n.gray{color:#a7a7a7}\n.blue{color: @blue;}\n\na.cyan:hover,a.cyan:visited,a.cyan:link{color: @cyan;}\n\n\n\n\n//==Fontsize\n//\n@fz-s:              .833rem;  // 20 px\n@fz:                 1rem; // 24 px\n@fz-m:            1.16rem; // 28 px\n@fz-ml:           1.25rem; // 30 px\n@fz-l:              1.333rem; //  32 px\n@fz-ll:             1.5rem; //  36px\n\n\n  //==btn\n  .style_a{\n    background-color:@cyan;\n    color:@white;\n    border: 1px solid @cyan !important;\n    &:active{\n         background:@blue;\n         border: 1px solid @blue;\n    }&:focus{border: 1px solid @cyan;outline:none;}\n  }\n  .style_b{\n    background-color:@white;\n    color:@cyan;\n    border: 1px solid @cyan;\n    &:active{\n         background:@cyan;\n         border: 1px solid @cyan;\n         color:@white;\n    }&:focus{border: 1px solid @cyan;outline:none;}\n  }\n  .disable {\n      -webkit-filter: grayscale(100%);\n      -moz-filter: grayscale(100%);\n      -ms-filter: grayscale(100%);\n      -o-filter: grayscale(100%);\n\n      filter: grayscale(100%);\n\n      filter: gray;\n  }\n  .smallbtn {\n    -webkit-border-radius: 0.3rem;\n    -moz-border-radius: 0.3rem;\n    border-radius: 0.3rem;\n    height:1.66rem;\n    text-align: center;\n    width: 100%;\n    font-weight: bold;\n    font-size: @fz;\n    display: block;\n  }\n  .mainbtn{\n      -webkit-border-radius: 0.3rem;\n      -moz-border-radius: 0.3rem;\n      border-radius: 0.3rem;\n      height:2.5rem;\n      text-align: center;\n      width: 100%;\n      font-weight: bold;\n      font-size: @fz;\n      display: block;\n  }\n  a.mainbtn,a.mainbtn_disable,a.mainbtn_b{ line-height:2.5rem }\n\n  .iconfl:before{\n    position: absolute;\n    left: 1rem;\n    height:1rem;\n    line-height: 1rem;\n    top: 50%;\n    margin-top:-0.5rem;\n  }\n  .al-l{\n    padding-left:1rem;\n    text-align: left;\n  }\n  .al-r{\n    padding-right:1rem;\n    text-align: right;\n  }\n  .iconfr:before{\n    position: absolute;\n    right: 1rem;\n    height:1rem;\n    line-height: 1rem;\n    top: 50%;\n    margin-top:-0.5rem;\n  }\n\n\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** button.vue?3de5f1ff\n **/","<template>\n  <div\n    class=\"headerbar al-c lh-ll bgcyan pa pr\"\n  >\n    <span\n      class=\"\n        {{lefticonname}}\n        {{lefticon?'show':'hide'}}\n        tapBox leftTap\"\n      v-touch:tap=\"handlerlefticon\"\n    >\n    </span>\n    <span\n      class=\"\n        {{righticonname}}\n        {{righticon?'show':'hide'}}\n        tapBox rightTap\"\n      v-touch:tap=\"handlerrighticon\"\n    >\n    </span>\n    <slot></solt>\n  </div>\n</template>\n\n<script>\nimport coerceBoolean from '../utils/coerceBoolean.js'\nexport default {\n  props: {\n    textsize: {\n      type: Number,\n      default: 1\n    },\n    textcolor: {\n      type: String\n    },\n    lefticon: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: true\n    },\n    lefticonname: {\n      type: String,\n      default: ''\n    },\n    handlerlefticon: {\n      type: Function,\n      default: () => false\n    },\n    righticon: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: true\n    },\n    righticonname: {\n      type: String,\n      default: ''\n    },\n    handlerrighticon: {\n      type: Function,\n      default: () => false\n    }\n  },\n  ready () {\n    console.log('this', this)\n  }\n}\n</script>\n\n<style lang=\"less\">\n//返回\n.headerbar {\n    width: 100%;\n    z-index: 100;\n    top: 0;\n    .tapBox{\n        width: 3rem;\n        height: 3rem;\n        display: inline-block;\n        position: absolute;\n        top:0;\n        display: none;\n    }\n    .leftTap{\n      left: 0;\n    }\n    .rightTap{\n      right: 0;\n    }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** header.vue?23e547c0\n **/","<template>\n  <div v-show=\"show\" class=\"loadingbox\">\n    <div\n      class=\"loading\"\n      v-bind:style=\"{\n        top:top+'rem',\n        backgroundSize:loadersize+'rem'\n      }\"\n    >\n    </div>\n  </div>\n</template>\n\n<script>\nimport coerceBoolean from '../utils/coerceBoolean.js'\n\nexport default {\n  props: {\n    show: {\n      type: Boolean,\n      coerce: coerceBoolean,\n      default: false\n    },\n    top: {\n      type: Number,\n      default: 0\n    },\n    loadersize: {\n      type: Number,\n      default: 1\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n  //加载\n  .loadingbox{\n    background-color:rgba(255,255,255,0);\n    z-index: 119;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    position: fixed;\n  }\n  .loading{\n      background-color:#fff;\n      position: fixed;\n      z-index: 120;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-image: url(../../images/loading.gif);\n      background-size:162/24rem;\n      background-repeat: no-repeat;\n      background-position: center 45%;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** loading.vue?419c36f1\n **/","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.2.1\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n    function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n      var parent = this;\n\n      var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\n      if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {\n        lib$es6$promise$$internal$$makePromise(child);\n      }\n\n      var state = parent._state;\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$es6$promise$asap$$asap(function(){\n          lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);\n        });\n      } else {\n        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$es6$promise$then$$default &&\n          constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    var lib$es6$promise$$internal$$id = 0;\n    function lib$es6$promise$$internal$$nextId() {\n      return lib$es6$promise$$internal$$id++;\n    }\n\n    function lib$es6$promise$$internal$$makePromise(promise) {\n      promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;\n      promise._state = undefined;\n      promise._result = undefined;\n      promise._subscribers = [];\n    }\n\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        return new Constructor(function(resolve, reject) {\n          reject(new TypeError('You must pass an array to race.'));\n        });\n      } else {\n        return new Constructor(function(resolve, reject) {\n          var length = entries.length;\n          for (var i = 0; i < length; i++) {\n            Constructor.resolve(entries[i]).then(resolve, reject);\n          }\n        });\n      }\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();\n      this._result = this._state = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$es6$promise$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {\n        lib$es6$promise$$internal$$makePromise(this.promise);\n      }\n\n      if (lib$es6$promise$utils$$isArray(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._result = new Array(this.length);\n\n        if (this.length === 0) {\n          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());\n      }\n    }\n\n    function lib$es6$promise$enumerator$$validationError() {\n      return new Error('Array Methods must be provided an Array');\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var input   = this._input;\n\n      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$es6$promise$promise$resolve$$default) {\n        var then = lib$es6$promise$$internal$$getThen(entry);\n\n        if (then === lib$es6$promise$then$$default &&\n            entry._state !== lib$es6$promise$$internal$$PENDING) {\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = entry;\n        } else if (c === lib$es6$promise$promise$$default) {\n          var promise = new c(lib$es6$promise$$internal$$noop);\n          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        this._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = value;\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-promise/dist/es6-promise.js\n ** module id = 11\n ** module chunks = 0\n **/","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hammerjs/hammer.js\n ** module id = 17\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = \"<headerbar class=\\\"white fz-m\\\" :lefticonname=lefticonname :handlerlefticon=actionback>{{apptitle}}</headerbar> <loading :show=authenticating :loadersize=loadersize :top=loadertop></loading> <div class=warp> <div class=\\\"maincontent pdt1 pr\\\"> <buttonbar v-touch:tap=handlerToAbout class=\\\"icon-right al-l mgb1\\\" setstyle=b iconfixedright=true> 一键预约 </buttonbar> <buttonbar v-touch:tap=handlerLoadingtest class=\\\"icon-stopwatch al-l mgb1\\\" setstyle=b iconfixedright=true> 模拟加载 </buttonbar> <buttonbar v-touch:tap=handlerLoadingtest class=\\\"icon-attention-alt al-l mgb1\\\" setstyle=b iconfixedright=true> 模拟弹出窗口 </buttonbar> <router-view class=view transition=test transition-mode=out-in keep-alive></router-view> </div> <p>&nbsp;</p> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = \"<div> <h2>ABOUT US...</h2> <a v-link=\\\"{ path: '/about/about_me' }\\\">aboutMe{{message}}</a> <p>{{val}}</p> <br/><br/> <router-view class=view transition=test transition-mode=out-in keep-alive></router-view> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/about/about.vue\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = \"<div>archive with id: {{$route.params.messageId}}</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/index/archive.vue\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = \"<div> <h2>inbox! {{message.text}}</h2> <router-view></router-view> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/index/index.vue\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = \"<div> <div v-if=$loadingRouteData>Loading data...</div> <div v-if=!$loadingRouteData>message #{{message.id}}: {{message.text}}</div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/index/message.vue\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = \"<p>FOUR OH FOUR</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/not-found.vue\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = \"<button v-bind:class=\\\"{\\n  mainbtn:big,\\n  smallbtn:small,\\n  disable:disable,\\n  iconfl:iconfixedleft,\\n  iconfr:iconfixedright,\\n  pr:true,\\n  style_a:stylea,\\n  style_b:styleb\\n}\\\"> <slot> </slot></button>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/publick/button.vue\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"headerbar al-c lh-ll bgcyan pa pr\\\"> <span class=\\\"{{lefticonname}} {{lefticon?'show':'hide'}} tapBox leftTap\\\" v-touch:tap=handlerlefticon> </span> <span class=\\\"{{righticonname}} {{righticon?'show':'hide'}} tapBox rightTap\\\" v-touch:tap=handlerrighticon> </span> <slot> </slot></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/publick/header.vue\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = \"<div v-show=show class=loadingbox> <div class=loading v-bind:style=\\\"{\\n      top:top+'rem',\\n      backgroundSize:loadersize+'rem'\\n    }\\\"> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/publick/loading.vue\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<div> <h2>User yo</h2> <router-view></router-view> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/user/index.vue\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"<h3>user posts</h3>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/user/posts.vue\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = \"<div> <h3>user profile</h3> <p>{{$route.params.userId}} {{$route.params.something}}</p> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/user/profile.vue\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = \"<div>user settings</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/user/settings.vue\n ** module id = 31\n ** module chunks = 0\n **/","module.exports = \"<div class=test _v-f2dda50e=\\\"\\\"> <h3 _v-f2dda50e=\\\"\\\">this is about me!</h3> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-f2dda50e!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/about/about_me.vue\n ** module id = 32\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!less-loader?sourceMap!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 33\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./about.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./about.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/about/about.vue\n ** module id = 34\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-f2dda50e&scoped=true!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./about_me.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-f2dda50e!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./about_me.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/about/about_me.vue\n ** module id = 35\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./archive.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/index/archive.vue\n ** module id = 36\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./index.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/index/index.vue\n ** module id = 37\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./message.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./message.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/index/message.vue\n ** module id = 38\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./not-found.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/not-found.vue\n ** module id = 39\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./button.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./button.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./button.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/publick/button.vue\n ** module id = 40\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./header.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./header.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./header.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/publick/header.vue\n ** module id = 41\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./loading.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./loading.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/publick/loading.vue\n ** module id = 42\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/user/index.vue\n ** module id = 43\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./posts.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/user/posts.vue\n ** module id = 44\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./profile.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/user/profile.vue\n ** module id = 45\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./settings.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/user/settings.vue\n ** module id = 46\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 47\n ** module chunks = 0\n **/",";(function () {\n\n  var vueTouch = {}\n  var Hammer = typeof require === 'function'\n    ? require('hammerjs')\n    : window.Hammer\n  var gestures = ['tap', 'pan', 'pinch', 'press', 'rotate', 'swipe']\n  var directions = ['up', 'down', 'left', 'right', 'horizontal', 'vertical', 'all']\n  var customEvents = {}\n\n  if (!Hammer) {\n    throw new Error('[vue-touch] cannot locate Hammer.js.')\n  }\n\n  // exposed global options\n  vueTouch.config = {}\n\n  vueTouch.install = function (Vue) {\n\n    Vue.directive('touch', {\n\n      isFn: true,\n      acceptStatement: true,\n      priority: Vue.directive('on').priority,\n\n      bind: function () {\n        if (!this.el.hammer) {\n          this.el.hammer = new Hammer.Manager(this.el)\n        }\n        var mc = this.mc = this.el.hammer\n        // determine event type\n        var event = this.arg\n        if (!event) {\n          console.warn('[vue-touch] event type argument is required.')\n        }\n        var recognizerType, recognizer\n\n        if (customEvents[event]) {\n          // custom event\n          var custom = customEvents[event]\n          recognizerType = custom.type\n          recognizer = new Hammer[capitalize(recognizerType)](custom)\n          recognizer.recognizeWith(mc.recognizers)\n          mc.add(recognizer)\n        } else {\n          // built-in event\n          for (var i = 0; i < gestures.length; i++) {\n            if (event.indexOf(gestures[i]) === 0) {\n              recognizerType = gestures[i]\n              break\n            }\n          }\n          if (!recognizerType) {\n            console.warn('[vue-touch] invalid event type: ' + event)\n            return\n          }\n          recognizer = mc.get(recognizerType)\n          if (!recognizer) {\n            // add recognizer\n            recognizer = new Hammer[capitalize(recognizerType)]()\n            // make sure multiple recognizers work together...\n            recognizer.recognizeWith(mc.recognizers)\n            mc.add(recognizer)\n          }\n          // apply global options\n          var globalOptions = vueTouch.config[recognizerType]\n          if (globalOptions) {\n            guardDirections(globalOptions)\n            recognizer.set(globalOptions)\n          }\n          // apply local options\n          var localOptions =\n            this.el.hammerOptions &&\n            this.el.hammerOptions[recognizerType]\n          if (localOptions) {\n            guardDirections(localOptions)\n            recognizer.set(localOptions)\n          }\n        }\n        this.recognizer = recognizer\n      },\n\n      update: function (fn) {\n        var mc = this.mc\n        var event = this.arg\n        // teardown old handler\n        if (this.handler) {\n          mc.off(event, this.handler)\n        }\n        if (typeof fn !== 'function') {\n          this.handler = null\n          console.warn(\n            '[vue-touch] invalid handler function for v-touch: ' +\n            this.arg + '=\"' + this.descriptor.raw\n          )\n        } else {\n          mc.on(event, (this.handler = fn))\n        }\n      },\n\n      unbind: function () {\n        if (this.handler) {\n          this.mc.off(this.arg, this.handler)\n        }\n        if (!Object.keys(this.mc.handlers).length) {\n          this.mc.destroy()\n          this.el.hammer = null\n        }\n      }\n    })\n\n    Vue.directive('touch-options', {\n      priority: Vue.directive('on').priority + 1,\n      update: function (options) {\n        var opts = this.el.hammerOptions || (this.el.hammerOptions = {})\n        if (!this.arg) {\n          console.warn('[vue-touch] recognizer type argument for v-touch-options is required.')\n        } else {\n          opts[this.arg] = options\n        }\n      }\n    })\n  }\n\n  /**\n   * Register a custom event.\n   *\n   * @param {String} event\n   * @param {Object} options - a Hammer.js recognizer option object.\n   *                           required fields:\n   *                           - type: the base recognizer to use for this event\n   */\n\n  vueTouch.registerCustomEvent = function (event, options) {\n    options.event = event\n    customEvents[event] = options\n  }\n\n  function capitalize (str) {\n    return str.charAt(0).toUpperCase() + str.slice(1)\n  }\n\n  function guardDirections (options) {\n    var dir = options.direction\n    if (typeof dir === 'string') {\n      var hammerDirection = 'DIRECTION_' + dir.toUpperCase()\n      if (directions.indexOf(dir) > -1 && Hammer.hasOwnProperty(hammerDirection)) {\n        options.direction = Hammer[hammerDirection]\n      } else {\n        console.warn('[vue-touch] invalid direction: ' + dir)\n      }\n    }\n  }\n\n  if (typeof exports == \"object\") {\n    module.exports = vueTouch\n  } else if (typeof define == \"function\" && define.amd) {\n    define([], function(){ return vueTouch })\n  } else if (window.Vue) {\n    window.VueTouch = vueTouch\n    Vue.use(vueTouch)\n  }\n\n})()\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-touch/vue-touch.js\n ** module id = 48\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.22\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  queue.length = 0;\n  runBatcherQueue(userQueue);\n  // user watchers triggered more internal watchers\n  if (queue.length) {\n    runBatcherQueue(queue);\n  }\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.22';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 49\n ** module chunks = 0\n **/","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-define.js\n ** module id = 50\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 51\n ** module chunks = 0\n **/"],"sourceRoot":""}